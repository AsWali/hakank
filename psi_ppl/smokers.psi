/*
  https://dtai.cs.kuleuven.be/problog/tutorial/basic/05_smokers.html
  """
  Social networks (Friends & Smokers)

  The ProbLog program below encodes a variant of the famous Friends & Smokers problem. The 
  first two rules state that there are two possible causes for a person X to smoke, 
  namely X having stress, and X having a friend Y who smokes himself and influences X. 
  Note that, according to our this program, the presence of stress and of (possibly multiple) 
  smoking friends all contribute to the probability of the person X smoking, namely in a 
  noisy-or way (recall the noisy-or in the coin tossing example). Furthermore, the program 
  encodes that if X smokes, (s)he has asthma with probability 0.4.

  The program below considers a scenario with 4 people, having a total of 5 friendship relations.
  """

  Cf ~/blog/smokers.blog

  Too slow...

*/


def main() {

  n := 4;
  p := array(n);

  stress := array(n);
  asthma := array(n);
  smokes := array(n);

  influences := array(n,[0,0,0,0]);
  
// random Boolean stress(Person p) ~ BooleanDistrib(0.3);
// random Boolean asthma(Person p) ~ if smokes(p) then BooleanDistrib(0.4);

// random Boolean influences(Person p1, Person p2) ~ BooleanDistrib(0.2);
// random Boolean smokes(Person p1) ~
//      if stress(p1) then true
//      else if exists Person p2 friend(p1,p2) & influences(p2, p1) & smokes(p2) then true;
      
  // friend := [p[0], p[1],
  //            p[1], p[0],
  //            p[1], p[3],
  //            p[2], p[1],
  //            p[3], p[1]],
  friend := [[0,1,0,0],
             [1,0,0,1],
             [0,1,0,0],
             [0,1,0,0]];
             
   for i in [0..n) {
      stress[i] = flip(0.3);
      
      if smokes[i] {
        asthma[i] = flip(0.3);
      }

      for j in [0..n) {
        if i != j {
          influences[i][j] = flip(0.2);
        }
      }

      if stress[i] {
        smokes[i] = true;
      } else {
        // t := 0;
        for j in [0..n) {
          if friend[i][j] && smokes[j] && influences[j][i]  {
            // t += 1;
            smokes[i] = true;
          }
        }
        // if t > 0 {
        //   smokes[i] = true;
        // }
      }
   }


  observe(smokes[1]);
  observe(influences[3][1] = false);

  // query smokes(p[0]);
  // query smokes(p[1]);
  // query smokes(p[2]);
  // query smokes(p[3]);

  // query asthma(p[0]);
  // query asthma(p[1]);
  // query asthma(p[2]);
  // query asthma(p[3]);

  // query influences(p[0],p[1]);

  return(
        smokes[0]
        );


}