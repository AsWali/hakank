/*
  From Joost-Pieter Katoen
  "Probabilistic Programming Quantitative Modeling for the Masses?"
  (MMB 2018 Conference, Erlangen)
  
  Slide 4:
  """
  How likely does a student end up with a bad mood after getting
  a bad grade for an easy exam, given that she is well prepared?
  """
*/

// observe difficulty = easy, preparation = good, grade = bad)
// E[r₁,r₂,r₃,r₄,r₅,r₆,r₇,r₈] = (1,0,0,1,1,0,9/10,1/10)
// (1,0,0,1,1,0,0.9,0.1)

// observe(mood=bad);
// E[r₁,r₂,r₃,r₄,r₅,r₆,r₇,r₈] = (789/1163,374/1163,917/1163,246/1163,1989/2326,337/2326,1,0)
// (0.678417884780739,0.321582115219261,0.78847807394669,0.21152192605331,0.855116079105761,0.144883920894239,1,0)
//
def main() {

  // difficulty
  easy:=0;
  hard := 1;

  good := 0;
  bad := 1;

  difficulty := [easy,hard][categorical([0.6, 0.4])];
  preparation := [bad,good][categorical([0.7, 0.3])];

  grade := 0;
  if difficulty=easy && preparation=bad {
    grade = [bad,good][categorical([0.95, 0.05])];
    
  } else if difficulty=easy && preparation=good {
    grade = [bad,good][categorical([0.5, 0.5])];
    
  } else if difficulty=hard && preparation=bad {
    grade = [bad,good][categorical([0.6, 0.4])];
    
  } else if difficulty=hard && preparation=good {
    grade = [bad,good][categorical([0.05, 0.95])];
  }

  mood := 0;
  if grade = bad {
    mood = [bad,good][categorical([0.9, 0.1])];
  } else {
    mood = [bad,good][categorical([0.3, 0.7])];
  }

  // observe(difficulty = easy);
  // observe(preparation = good);
  // observe(grade = bad);
  observe(mood=bad);

  return (difficulty=easy,
          difficulty=hard,
          preparation=bad,          
          preparation=good,
          grade=bad,
          grade=good,          
          mood=bad,
          mood=good
         );

}