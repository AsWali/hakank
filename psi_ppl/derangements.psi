/*

  From http://rosettacode.org/wiki/Permutations/Derangements
  """
  Permutations/Derangements
  A derangement is a permutation of the order of distinct items in which 
  no item appears in its original place.

  For example, the only two derangements of the three items 
    (0, 1, 2) are (1, 2, 0), and (2, 0, 1).
  
  The number of derangements of n distinct items is known as the subfactorial of n, 
  sometimes written as !n. There are various ways to calculate !n.
  ...
  """

   n c
   ---
   1 0
   2 3/2  = 1/2
   3 13/6 = 2.166667
   4 37/12 = ~3.08333333333333333333
   5 81/20 = 4.05
   6 151/30 = 	~5.03333333333333333333
   7 253/42 = ~6.02380952380952380952

   n p[c_]
   -------
   1 DiracDelta[c]
   2 p[c_] := 1/2*DiracDelta[-c+1]+1/2*DiracDelta[-c+2]
   3 p[c_] := 1/2*DiracDelta[-c+2]+1/3*DiracDelta[-c+3]+1/6*DiracDelta[-c+1]
   4 p[c_] := 1/3*DiracDelta[-c+4]+1/36*DiracDelta[-c+1]+4/9*DiracDelta[-c+3]+7/36*DiracDelta[-c+2]
   5 p[c_] := 1/320*DiracDelta[-c+1]+13/320*DiracDelta[-c+2]+27/64*DiracDelta[-c+4]+27/80*DiracDelta[-c+5]+63/320*DiracDelta[-c+3]
   6 p[c_] := 1/3750*DiracDelta[-c+1]+128/375*DiracDelta[-c+6]+256/625*DiracDelta[-c+5]+368/1875*DiracDelta[-c+4]+7/1250*DiracDelta[-c+2]+88/1875*DiracDelta[-c+3]
   7 p[c_] := 1/54432*DiracDelta[-c+1]+10625/54432*DiracDelta[-c+5]+1375/27216*DiracDelta[-c+4]+25/3402*DiracDelta[-c+3]+31/54432*DiracDelta[-c+2]+3125/7776*DiracDelta[-c+6]+3125/9072*DiracDelta[-c+7]


   new-types is much slower, especially on n >= 5

*/


def main() {
  n := 5;
  a := array(n);
  c := 0;
  for i in [0..n-1] {
    a[i] = uniformInt(0,n-1);
    for j in [i+1..n-1] {
      observe(a[i] != a[j])
    }
    if a[i] != i {
      c += 1;
    }
  }

  return(c
    // a[0],a[1],a[2]
    );
}