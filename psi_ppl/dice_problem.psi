/*
   Dice problem.

   From Think Bayes, page 21.
   """
   Suppose I have a box of dice that contains a 4-sided die, a 6-sided die, an
   8-sided die, a 12-sided die, and a 20-sided die. If you have ever played
   Dungeons & Dragons, you know what I am talking about.

   Suppose I select a die from the box at random, roll it, and get a 6. What is
   the probability that I rolled each die?

   ...
   
   What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?
   """

  Cf ~/blog/dice_problem.blog

   1) We throw a 6
       Distribution of values for dice
        6       0.3940305436538295
        8       0.2984244581354674
        12      0.1953710599363614
        20      0.11217393827435161
        
   2) What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?
      Distribution of values for dice
        8       0.9403335917732026
        12      0.05806318944282228
        20      0.0016032187840023726


*/

// E[r₁,r₂,r₃,r₄,r₅] = (0,20/51,5/17,10/51,2/17)
// (0,0.392156862745098,0.294117647058824,0.196078431372549,0.117647058823529)
def test1() {

  dice4 := 0;
  dice6 := 1;
  dice8 := 2;
  dice12 := 3;
  dice20 := 4;
  diceType := [dice4,dice6,dice8,dice12,dice20];

  // We pick one dice
  dice := diceType[categorical([1/5,1/5,1/5,1/5,1/5])];

  // And then throws it a couple of times
  n := 1;
  throw := array(n);
  for i in [0..n) {
     if dice = dice4 {
       throw[i]  = uniformInt(1,4);
       
     } else if dice = dice6 {
       throw[i] = uniformInt(1,6);
       
     } else if dice = dice8 {
       throw[i] = uniformInt(1,8);
       
     } else if dice = dice12 {
       throw[i] = uniformInt(1,12);
       
     } else {
       throw[i] = uniformInt(1,20);
     }
  }
  
  // The value of the throws.
  observe(throw[0] = 6); // First throw

  // "What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?"
  // observations := [6,6,8,7,7,5,4];

  // What dice was it?
  return (dice=dice4,
          dice=dice6,
          dice=dice8,
          dice=dice12,
          dice=dice20,
         );

}

// "What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?"
// E[r₁,r₂,r₃,r₄,r₅] = (0,0,170859375/181139311,10000000/181139311,279936/181139311)
// (0,0,0.943248453672213,0.0552061280612909,0.00154541826649655)
def test2() {

  dice4 := 0;
  dice6 := 1;
  dice8 := 2;
  dice12 := 3;
  dice20 := 4;
  diceType := [dice4,dice6,dice8,dice12,dice20];

  // "What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?"
  observations := [6,6,8,7,7,5,4];

  // We pick one dice
  dice := diceType[categorical([1/5,1/5,1/5,1/5,1/5])];


  // And then throws it a couple of times
  n := observations.length;
  throw := array(n);
  for i in [0..n) {
     if dice = dice4 {
       throw[i]  = uniformInt(1,4);
       
     } else if dice = dice6 {
       throw[i] = uniformInt(1,6);
       
     } else if dice = dice8 {
       throw[i] = uniformInt(1,8);
       
     } else if dice = dice12 {
       throw[i] = uniformInt(1,12);
       
     } else {
       throw[i] = uniformInt(1,20);
     }
     observe(throw[i]=observations[i]);
  }
  
  // The value of the throws.
  // observe(throw[0] = 6); // First throw

  // What dice was it?
  return (dice=dice4,
          dice=dice6,
          dice=dice8,
          dice=dice12,
          dice=dice20,
         );

}


def main() {
  // return test1();
  return test2();
}