/*
  From
  https://www.youtube.com/watch?v=leIqVD4-Fks
  "First-Order Probabilistic Inference"
  Time 45:06

  Returns a huge expression for --expectation

*/

def main() {
  // Cannot use a random variable as size in array or range
  // numBattalion := uniformInt(1,3);
  numBattalion := 2;
  

  // random Boolean Large(Battalion bat) ~ Bernoulli(0.6);
  largeBattalion := array(numBattalion,false);
  for b in [0..numBattalion) {
    largeBattalion[b] = flip(0.6);
  }

  region := array(numBattalion,0);
  for b in [0..numBattalion) {
    region[b] = [1,2,3][categorical([4/7,2/7,1/7])];
  }

  numSoldier := array(numBattalion,0);
  for b in [0..numBattalion) {
    if largeBattalion[b] {
      numSoldier[b] = poisson(1500);
    } else {
      if region[b] = 2 {
        numSoldier[b] = 300;
      } else {
        numSoldier[b] = poisson(500);
      }
    }
  }
         

// // query Average( {#Soldier(b) for Battalion b} ); // Don't work: no Average

// query size({b for Battalion b});
// query {b for Battalion b};
// query {BattalionOf(s) for Soldier s};
// query {Large(b) for Battalion b};
// query {Region(b) for Battalion b};
// query {BattalionOf(s) for Soldier s};
// // Hur får man reda på hur många soldater det var i respektive bataljon?
// query {s for Soldier s, Battalion b : BattalionOf(s) == b};

  return(
         largeBattalion[0],
         region[0],
         numSoldier[0]
        );
}