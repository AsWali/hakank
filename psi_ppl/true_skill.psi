/*
  (Simple) True skill problem.
  
  Example inspired by
  Johannes Borgstrom, Andrew D. Gordon, Michael Greenberg, James Margetson, and Jurgen Van Gael:
  "Measure Transformer Semantics for Bayesian Machine Learning"
  https://www.microsoft.com/en-us/research/publication/measure-transformer-semantics-for-bayesian-machine-learning-2011/?from=http%3A%2F%2Fresearch.microsoft.com%2Fpubs%2F135344%2Fmsr-tr-2011-18.pdf

  Note that we constraint the generated worlds so they satisfies the
  observation constraints (a > b > c). This means that we will ge only
  a small part of all worlds (about 0.16).

  Cf: ~/cplint/trueskill.pl
      ~/blog/true_skill.blog

  Unfortunately --expectation --mathematica returns these expressions:
  E[skillsₐ_,skills_b_,skills_c_] = (-1/(-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1)*1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1!=0]*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}]*xi1,{xi1,-Infinity,Infinity}]*30+1/(-1/600^(3/2)*1/E^1200*1/Pi^(3/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+Pi)*100*Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1!=0]*Pi,-1/(-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1)*1/600^(3/2)*1/E^1500*1/Pi^3*Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1!=0]*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[(12^(1/2)*2/5*E^(1/75*xi3^2+300+4*xi3)*Pi^(1/2)*xi3+12^(1/2)*60*E^(1/75*xi3^2+300+4*xi3)*Pi^(1/2))*1/E^(1/30*xi3^2)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1/(-1/600^(3/2)*1/E^1200*1/Pi^(3/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+Pi)*100*Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1!=0]*Pi,-1/(-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1)*1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1!=0]*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}]*xi2,{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1/(-1/600^(3/2)*1/E^1200*1/Pi^(3/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+Pi)*100*Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1!=0]*Pi)
Pr[error] = Boole[-1/600^(3/2)*1/E^1200*1/Pi^(5/2)*12^(1/2)*Integrate[E^(-1/20*xi1^2+10*xi1)*Integrate[E^(-1/20*xi2^2+10*xi2)*Integrate[E^(-1/50*xi3^2+4*xi3)*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi1+1/30^(1/2)*xi3]+1)/2*Sqrt[Pi]*(Erf[-1/30^(1/2)*xi2+1/30^(1/2)*xi3]+1)/2,{xi3,-Infinity,Infinity}],{xi2,-Infinity,Infinity}],{xi1,-Infinity,Infinity}]*30+1==0]

*/

def main() {
  // There are three people, a, b, and c  
  a := 0;
  b := 1;
  c := 2;

  // Each person has an unknown Skill and a
  // known performance, where the skill is
  // reflected in the performance (with uncertainties).
  skills := array(3,0.0);
  performance := array(3,0.0);
  for i in [0..2] {
    skills[i] = gauss(100,10);
    performance[i] = gauss(skills[i],15);
  }

  observe(performance[a] > performance[b]);
  observe(performance[a] > performance[c]);  
  observe(performance[b] > performance[c]);  

  return (
     // performance[a], performance[b],performance[c],
     skills[a],skills[b],skills[c]
     );


}