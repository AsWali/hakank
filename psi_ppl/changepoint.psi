/*
  Change point detection

  From https://nishanthu.github.io/articles/ChangePointAnalysis.html

  See ~/jags/change_point.R
"""
out$cp %>% as.vector %>% mean %>% round(1)
[1] 13.5
"""

  See ~/blog/changepoint.blog

  This takes way too long time. > 5min
  Tested both with and without --nocheck
  --expectation don't yield proper numbers

*/

def main() {

  // data
  y := [0.90685440,0.38219559,0.13508408,-0.96054590,0.78553871,0.06791336,-0.09750806,
        // -0.85431057,0.33478539,0.76388689,0.52911522,-0.41226421,1.53302740,5.01118838,4.75164473,
        // 3.79149212,3.97544567,4.33985561,4.52511631,4.21723600,4.22733898,3.80925885,3.65504091,3.25267865,
        3.85339052,3.40136529,4.21462117,3.94033196,4.00900359,4.44148942,4.23449516,4.52032000,4.41335270
        ];


  n := y.length;
  mu := 2.405677; // mean(y)

  mu1 := uniform(0, mu);
  // mu2 := uniform(mu, 10*mu);
  mu2 := uniform(mu, 10*mu);  
  cp  := uniformInt(0, n-1);

  // Random Real mu0(Integer i) ~ if i < cp then mu1 else mu2;
  // Random Real y(Integer i) ~ Gaussian(mu0(i), 1);

  mu0 := array(n);
  for i in [0..n-1] {
    if i < cp {
      mu0[i] = mu1;
    } else {
      mu0[i] = mu2;    
    } 
    cobserve(y[i], gauss(mu0[i], 1));
  }

  // return(mu1,mu2,cp);
  return(cp);
}