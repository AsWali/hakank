/*

  From cplint: http://cplint.eu/example/inference/coin.pl
  """
  Throwing a coin with uncertainty on its fairness, from
  J. Vennekens, S. Verbaeten, and M. Bruynooghe. Logic programs with annotated
  disjunctions. In International Conference on Logic Programming,
  volume 3131 of LNCS, pages 195-209. Springer, 2004.
  """

  Compare with BLOG model biased_coin.blog and cplint biased_coin.pl

  Result from BLOG model (no observation):
  Distribution of values for coinResult
	head	0.5072899999999733
	tail	0.492709999999961
  Distribution of values for coinType
	fair	0.9008299999999686
	biased	0.0991699999999917

  Result from BLOG model (observation: coinType = biased):
  Distribution of values for coinResult
	head	0.599319999999997
	tail	0.40067999999996046
  Distribution of values for coinType
	biased	1.0


*/

// No observations:
// E[coinResult,coinType,coinBiased,coinFair,coinHead,coinTail] = (49/100,11/10,1/10,9/10,51/100,49/100)

// observe(coinType = biased):
// E[coinResult,coinType,coinBiased,coinFair,coinHead,coinTail] = (2/5,2,1,0,3/5,2/5)

// observe(coinType = fair):
// E[coinResult,coinType,coinBiased,coinFair,coinHead,coinTail] = (1/2,1,0,1,1/2,1/2)

// observe(coinResult = tail):
// E[coinResult,coinType,coinBiased,coinFair,coinHead,coinTail] = (1,53/49,4/49,45/49,0,1)

// observe(coinResult = head);
// E[coinResult,coinType,coinBiased,coinFair,coinHead,coinTail] = (0,19/17,2/17,15/17,1,0)

// 
def main() {

  head := 0;
  tail := 1;

  fair := 1;
  biased := 2;

  coinTypes := [fair,biased];
  coinType := coinTypes[categorical([0.9,0.1])];

  coinResult := 0;
  headTail := [head,tail];
  if coinType == fair {
    coinResult = headTail[categorical([0.5,0.5])];
  } else {
    coinResult = headTail[categorical([0.6,0.4])];
  }

  observe(coinType = biased);
  // observe(coinType = fair);
  // observe(coinResult = tail);
  // observe(coinResult = head);


  coinHead := coinResult == head;
  coinTail := coinResult == tail;  
  coinBiased := coinType == biased;
  coinFair := coinType == fair;  

  return (coinResult,coinType,coinBiased,coinFair,coinHead,coinTail);

}