/*
  The BUGS Book
  Example 2.5.1, "The how many trick"

  Cf ~/jags/bugs_book_2_5_1.jags
  """
  model {
    for (i in 1:20) {
     Y[i] ~ dgamma(4, 0.04)
    }
    cum[1] <- Y[1]
    for (i in 2:20) {
      cum[i] <- cum[i - 1] + Y[i]
    }
    for (i in 1:20) {
      cum.step[i] <- i*step(1000 - cum[i])
      x[i] <- ifelse(cum[i] < 1001, 1, 0) # 
    }
    # number <- ranked(cum.step[], 20) # maximum number in cum.step ## NOTE: ranked is not in JAGS
    number <- sort(cum.step[]) # maximum number in cum.step
    check <- equals(cum.step[20], 0) # always 1 if I=20 big enough
  }

  Output:
           Mean       SD  Naive SE Time-series SE
qx[1]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[2]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[3]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[4]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[5]  9.999e-01 0.012247 5.000e-05      5.000e-05
x[6]  9.976e-01 0.049101 2.005e-04      2.043e-04
x[7]  9.810e-01 0.136350 5.566e-04      5.566e-04
x[8]  9.141e-01 0.280293 1.144e-03      1.131e-03
x[9]  7.578e-01 0.428418 1.749e-03      1.741e-03
x[10] 5.222e-01 0.499512 2.039e-03      2.039e-03
x[11] 2.825e-01 0.450235 1.838e-03      1.793e-03
x[12] 1.195e-01 0.324340 1.324e-03      1.307e-03
x[13] 4.015e-02 0.196313 8.014e-04      8.014e-04
x[14] 9.867e-03 0.098841 4.035e-04      4.035e-04
x[15] 2.117e-03 0.045959 1.876e-04      1.897e-04
x[16] 4.500e-04 0.021209 8.658e-05      8.988e-05
x[17] 1.667e-05 0.004082 1.667e-05      1.667e-05
x[18] 0.000e+00 0.000000 0.000e+00      0.000e+00
x[19] 0.000e+00 0.000000 0.000e+00      0.000e+00
x[20] 0.000e+00 0.000000 0.000e+00      0.000e+00
  """


*/

//
//n=20 is too slow
//
// --expectation
// for n=4
// E[x0_,check_] = (-1/E^(1001/25)*1053301/1250+1,-1/E^40*89322052893317/6237+1)
// (1., 1.)
// 
def main() {
  // n := 20;
  n := 4;  

  y := array(n);
  cum := array(n);
  for i in [0..n) {
    y[i] = gamma(3.0,0.04);
  }
  cum[0] = y[0];
  for i in [1..n) {
     cum[i] = cum[i-1]+y[i];
  }
  cum_step := array(n);
  for i in [0..n) {
    if cum[i] > 1000.0 {
      cum_step[i] = i*cum[i];
    } else {
      cum_step[i] = 0.0;
    }
  }

  // A changepoint.
  x := array(n);
  // random Real x(Integer i) ~ if cum(i) < 1001.0 then 1.0 else 0.0;
  for i in [0..n) {
    if cum[i] < 1001.0 {
      x[i] = 1;
    } else {
      x[i] = 0;
    }
  }

  // random Real number ~ max({cum_step(i) for Integer i: i>= 1 & i <= 20 });
  check := 0;
  if cum_step[n-1] == 0.0 {
    check = true;
  } 

  return(// number,
         x[0],
         x[1],
         x[2],
         x[3],
         // x[4],
         // x[5],
         check
         );

}