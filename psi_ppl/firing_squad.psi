/+
   Firing squad example (from Judea Pearl)

   court_order: a court order to shoot a prisoner is given
   captain_signals: captain signal to a and b to shoot the prisoner
   a_shoots: person a shoots at the prisoner
   b_shoots: person b shoots at the prisoner
   death: the prisoner is dead (due to the shooting of a and/or b)

   Cf the ProbLog model firing_squad.pl

   See ~/cplint/firing_squad.pl
       ~/blog/firing_squad.pl

   BLOG code:
      Note: BooleanDistrib generates true|false (Bernoulli generates 0|1)
   random Boolean court_order ~ BooleanDistrib(0.8);

   random Boolean captain_signals ~
       if court_order then BooleanDistrib(0.9) else BooleanDistrib(0.1);

   random Boolean a_shoots ~
       if captain_signals then BooleanDistrib(0.95) else BooleanDistrib(0.1);

   random Boolean b_shoots ~
       if captain_signals then BooleanDistrib(0.95) else BooleanDistrib(0.1);

   random Boolean death ~
     if a_shoots | b_shoots then BooleanDistrib(0.9);

      obs death = true;
   obs captain_signals = false;
      obs b_shoots = false;

   query court_order;
   query captain_signals;
   query a_shoots;
   query b_shoots;
   query death;


   with observe(captain_signals==0):
   ùîº[court_order,captain_signals,a_shoots,b_shoots,death] = (4/13,0,1/10,1/10,171/1000)

   with observe(death==1)
   ùîº[court_order,captain_signals,a_shoots,b_shoots,death] = (772/829,777/829,14580/15751,14580/15751,1)

   observe(death==0)
   ùîº[court_order,captain_signals,a_shoots,b_shoots,death] = (27988/58241,15133/58241,14580/58241,14580/58241,0)
+/

def main(){

   court_order := bernoulli(0.8);

   // Note: One have to declare the variables outside
   // the if scope in order to be used later.
   
   // captain_signals := bernoulli(0.0);
   captain_signals := bernoulli(0.1);   
   if court_order {
     captain_signals = bernoulli(0.9); // assignment, not declaration!
   }

   a_shoots := bernoulli(0.1);
   b_shoots := bernoulli(0.1);
   if captain_signals {
     a_shoots = bernoulli(0.95);
     b_shoots = bernoulli(0.95);     
   }

   death := bernoulli(0.0);
   if a_shoots | b_shoots {
     death = bernoulli(0.9);      
   }

   // observe(death == 1);
   // observe(death == 0);
   observe(captain_signals == 0);

   // return (Expectation(court_order),
   //        Expectation(captain_signals),
   //        Expectation(a_shoots),
   //        Expectation(b_shoots),
   //        Expectation(death));
   return (court_order,
          captain_signals,
          a_shoots,
          b_shoots,
          death);
          
}
