/*
  AB Testing
  A/B test

  From http://rpubs.com/rasmusab/exercise_2_bayesian_ab_testing
  """
  Exercise 2: Bayesian A/B testing for Swedish Fish Incorporated with Stan
  Rasmus Bååth

  Swedish Fish Incorporated is the largest Swedish company delivering fish by mail order, 
  but you probably already knew that. The marketing department have done a pilot study and 
  tried two different marketing methods:
  
  A: Sending a mail with a colorful brochure that invites people to sign up for a one year 
     salmon subscription.
  
  B: Sending a colorful brochure that invites people to sign up for a one year 
     salmon subscription nd that includes a free salmon.
  
  The marketing department sent out 16 mails of type A and 16 mails of type B. 
  Six Danes that received a mail of type A signed up for one year of salmon, and 
  ten Danes that received a mail of type B signed up!
  
  The marketing department now wants to know, which method should we use, A or B?
  
  At the bottom of this document you’ll find a solution. But try yourself first!
  Question I: Build a Bayesian model in Stan that answers the question: What is the 
  probability that method B is better than method A?
  """

  See ~/stan/ab_testing.R, ~/blog/ab_testing.blog

  From the BLOG model:
  Distribution of values for diffPos
	true	0.9937326918378403
	false	0.006268913220027902


*/
// It takes over 1 minute.
// $ time psi ab_testing.psi --nocheck --expectation
// E[rateA,rateB,rateDiff,diffPos] = (1/4,11/18,13/36,2214763035/2228421422)
// psi ab_testing.psi --nocheck --expectation  67,64s user 1,03s system 99% cpu 1:08,67 total
// 
// [0.25,0.611111111111111,0.361111111111111,0.993870824043802]

// new-types is much slower.

def main() {
    // Data
    nA := 26; // Number of sent mail
    nB := 16;

    // Model
    rateA := uniform(0,1);
    rateB := uniform(0,1);

    sA := binomial(nA, rateA);
    sB := binomial(nB, rateB);

    rateDiff := rateB - rateA;
    diffPos := rateB > rateA;

    // Data 
    observe(sA = 6);
    observe(sB = 10);

   return(rateA,rateB,rateDiff,diffPos);
}