/*
    The BUGS Book
  Example 3.4.1 Three coins (page 45)
  """
  Suppose I have 3 coins in my pocket. The coins may be either fair, biased 3:1 in
  favour of heads, or 3:1 in favour of tails, but I don't know how many of
  each type there are among the 3 coins. I randomly select 1 coin att toss it once,
  observing a head. What is the posterior distribution of the probability of a head?
  """

  Note that JAGS has the somewhat weird structure of dcat etc.

  ~/jags/bugs_book_3_4_1.R
  """
  data {
    y <- 1
  } 

  model {

    y ~ dbern(theta.true)
    theta.true <- theta[coin]
    coin ~ dcat(p[])
    for(i in 1:3) {
      p[i] <- 1/3
      theta[i] <- 0.25*i
      coin.prob[i] <- equals(coin, i)
    }
  }

  Output:
               Mean     SD  Naive SE Time-series SE
coin         2.3320 0.7458 0.0026369      0.0026369
coin.prob[1] 0.1672 0.3732 0.0013194      0.0013194
coin.prob[2] 0.3335 0.4715 0.0016669      0.0016669
coin.prob[3] 0.4993 0.5000 0.0017678      0.0017590
theta.true   0.5830 0.1865 0.0006592      0.0006592

  """

  cf ~/blog/bugs_book_3_4_1.blog

Distribution of values for coin
	1	0.1674620802817443
	2	0.331712490495053
	3	0.5008254292231837
Distribution of values for coin_prob(1)
	false	0.8325379197181293
	true	0.1674620802817443
Distribution of values for coin_prob(2)
	false	0.6682875095049394
	true	0.331712490495053
Distribution of values for coin_prob(3)
	true	0.5008254292231837
	false	0.49917457077678024
Distribution of values for theta_true
	0.25	0.1674620802817443
	0.5	0.331712490495053
	0.75	0.5008254292231837


*/

// E[coin,coin_prob₀,coin_prob₁,coin_prob₂,theta_true] = (7/3,1/6,1/3,1/2,7/12)
// (2.33333333333333,0.166666666666667,0.333333333333333,0.5,0.583333333333333)
def main() {

  n := 3;

  // Note: This model assumes a 1-based representation of the coins.
  coins := [1,2,3];
  // coin := coins[categorical([1/3,1/3,1/3])]; // Select one coin. 
  coin := uniformInt(1,3); // Select one coin.
  
  coin_prob := array(n);
  theta := array(n);
  theta_true := 0;
  for i in [0..n) {
    theta[i] = 0.25*(i+1); // Gotcha: This must be defined before theta_true = theta[i]
    // coin_prob[i] = (coin == i+1); // don't work
    if coin = i+1 {
      theta_true = theta[i];    
      coin_prob[i] = true;
    } 
    else {
      coin_prob[i] = false;
    }
  }
  y := flip(theta_true);  
  observe(y = 1); // We observe a head.

  return(coin,
         coin_prob[0],
         coin_prob[1],
         coin_prob[2],
         theta_true,
         );
}