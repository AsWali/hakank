/*
  Hidden Markov Models

  This is from the BLOG distribution hmm.dblog
  """
  A hidden Markov model with four states and four output symbols.
  The parameters of this model are completely made-up.
  DBLOG model
  """

  see ~/blog/hmm1.blog

*/

// Note: This might hang the computer!
def main() {

  print("DONT RUN THIS!");

  // states
  a := 1;
  c := 2;
  g := 3;
  t := 4;
  acgt := [a,c,g,t];

  // output
  resultA := 1;
  resultC := 2;  
  resultG := 3;
  resultT := 4;

  AA := uniform(0,1);
  AC := uniform(0,1);
  AG := uniform(0,1);
  AT := uniform(0,1);

  CA := uniform(0,1);
  CC := uniform(0,1);
  CG := uniform(0,1);
  CT := uniform(0,1);

  GA := uniform(0,1);
  GC := uniform(0,1);
  GG := uniform(0,1);
  GT := uniform(0,1);

  TA := uniform(0,1);
  TC := uniform(0,1);
  TG := uniform(0,1);
  TT := uniform(0,1);
  resultACGT := [resultA,resultC,resultG,resultT];

  timeSteps := 5;
  states := array(timeSteps);
  states[0] = acgt[categorical([0.3,0.2,0.1,0.4])]; // state 0
  for i in [1..timeSteps) {
    if states[i-1] = a {
      states[i] = acgt[categorical([AA,AC,AG,AT])];
    } else if states[i-1] = c {
      states[i] = acgt[categorical([CA,CC,CG,CT])];      
    } else if states[i-1] = g {
      states[i] = acgt[categorical([GA,GC,GG,GT])];
    } else {
      states[i] = acgt[categorical([TA,TC,TG,TT])];      
    }
  }

  outputs := array(timeSteps);
  for i in [0..timeSteps) {
    if states[i] == a {
      outputs[i] = resultACGT[categorical([0.05,0.05,0.05,0.05])];    
    } else if states[i] = c {
      outputs[i] = resultACGT[categorical([0.05,0.85,0.05,0.05])];    
    } else if states[i] = g {
      outputs[i] = resultACGT[categorical([0.05,0.05,0.85,0.05])];    
    } else {
      outputs[i] = resultACGT[categorical([0.05,0.05,0.05,0.85])];    
    }
  } 

  observe(outputs[0] = resultC);
  observe(outputs[1] = resultA);
  observe(outputs[2] = resultA);
  observe(outputs[3] = resultA);
  observe(outputs[4] = resultG);    

  return(states[0],states[1],states[2],states[3],states[4]);
}