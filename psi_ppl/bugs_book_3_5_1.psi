/*
  
  The BUGS Book
  Example 3.5.1 Heart transplants: learning from data

  ~/jags/bugs_book_3_5_1.R
  """
  model {
    yT ~ dbin(pT, nT)
    pT ~ dunif(0, 1)
    for (i in 1:8) {
      sP[i] ~ dexp(theta)
    }
    theta ~ dgamma(0.001, 0.001)
    surv.t <- pT/theta # expected survival with transplant
    Is <- surv.t - 2
  }

  Data: list(yT=8, nT=10, sP=c(2,3,4,4,6,7,10,12))

  Output:
         Mean      SD  Naive SE Time-series SE
Is     3.1442 2.28250 0.0080699      0.0085034
pT     0.7500 0.12014 0.0004248      0.0005856
surv.t 5.1442 2.28250 0.0080699      0.0085034
theta  0.1667 0.05899 0.0002086      0.0002086
  """

  cf ~/blog/bugs_book_3_5_1.blog

*/

// a large expression...
def main() {
  yT := 8;
  nT := 10;

  spData := [2,3,4,4,6,7,10,12];


  theta := gamma(0.001, 0.001); 
  // theta := gamma(0.1, 0.1); // A more reasonable range.
  pT := uniform(0,1);  
  // yT := binomial(nT, pT);
  // observe(yT = spData.length);
  sP := array(yT);
  for i in [0..yT) {
    sP[i] = exponential(theta); // Epsilon is not needed with "reasonable" Gamma.
    cobserve(sP[i],spData[i]);
  }
  
  surv_t := pT/theta;
  Is := surv_t - 2.0;

  return(Is,pT,surv_t,theta);

}