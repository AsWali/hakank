/*
  From
  https://mathematica.stackexchange.com/questions/128945/problems-encoding-a-bayesian-network-with-just-five-nodes-using-probabilitydistr

  Example is from "page 53 in Probabilistic Graphical Models (2009), by Daphne Koller and Neir Friedman:"

  """                                                                                                                                            
  The network has five nodes (random variables):
                                                                                                                                              
  Difficulty of a class taken by a student (0 = easy, 1 = hard)
  Intelligence of the student (0 = low, 1 = high)
  Grade achieved by the student (1 = A, 2 = B, 3 = C)
  SAT score of the student (0 = low, 1 = high)
  Letter of recommendation by the teacher (0 = False, 1 = True)
  We would like to use this network to do probabilistic inference (causal or evidential) like:                                                   
  "What is the probability of the student achieving an A, given that he is intelligent?"
  """

  cf ~/problog/intelligence_test.pl
     ~/cplint/intelligence_test.pl
     ~/blog/intelligence_test.blog

*/

// grade = grade_a,
// grade = grade_b,
// grade = grade_c,        
// intelligence = intelligence_low,
// intelligence = intelligence_high,        
// difficulty = difficulty_easy,
// difficulty = difficulty_hard,
// sat = sat_low,
// sat = sat_high,        
// letter = true,
// letter = false,

// No observation;
// E[r1_,r2_,r3_,r4_,r5_,r6_,r7_,r8_,r9_,r10_,r11_] = (181/500,721/2500,437/1250,7/10,3/10,3/5,2/5,29/40,11/40,7849/15625,7776/15625)
// (0.362, 0.2884, 0.3496,                                         grade a,b,c
//  0.7, 0.3,                                                      intelligence low,high
//  0.6, 0.4,                                                      difficulty easy hard
//  0.725, 0.275,                                                  sat low, high
//  0.502336, 0.497664                                             letter true, false
// )                                            

// observe(intelligence = intelligence_high):
// E[r1_,r2_,r3_,r4_,r5_,r6_,r7_,r8_,r9_,r10_,r11_] = (37/50,21/125,23/250,0,1,3/5,2/5,1/5,4/5,19193/25000,5807/25000)
// (0.74, 0.168, 0.092,                                            grade a,b,c
//  0, 1,                                                          intelligence low, high
//  0.6, 0.4,                                                      difficulty easy, hard
//  0.2, 0.8,                                                      sat low, high
//  0.76772, 0.23228)                                              letter true, false

// observe(letter = false):
// E[r1_,r2_,r3_,r4_,r5_,r6_,r7_,r8_,r9_,r10_,r11_] = (4525/62208,3605/15552,4807/6912,35665/41472,5807/41472,4793/10368,5575/10368,233621/276480,42859/276480,0,1)
// (0.07273984053497942, 0.23180298353909465, 0.6954571759259259,  grade a,b,c
//  0.8599778163580247, 0.1400221836419753,                        intelligence low, high
//  0.46228780864197533, 0.5377121913580247,                       difficulty easy, hard
//  0.8449833622685186, 0.15501663773148147,                       sat low,high
//  0, 1                                                           letter true, false
// )


def main() {

  // difficulty;
  difficulty_easy := 0;
  difficulty_hard := 1;
  difficulty := [difficulty_easy,difficulty_hard][categorical([0.6,0.4])];

  // intelligence;
  intelligence_low := 0;
  intelligence_high := 1;  
  intelligence := [intelligence_low,intelligence_high][categorical([0.7,0.3])];

  // grade
  grade_a := 0;
  grade_b := 1;
  grade_c := 2; 
  grades := [grade_a,grade_b,grade_c];
  
  grade := 0;
  if intelligence = intelligence_low && difficulty = difficulty_easy {
    grade = grades[categorical([0.3,0.4,0.3])];
    
  } else if intelligence = intelligence_low && difficulty = difficulty_hard {
    grade = grades[categorical([0.05,0.25,0.7])];
    
  } else if intelligence = intelligence_high && difficulty = difficulty_easy {
    grade = grades[categorical([0.9,0.08,0.02])];
    
  } else {
    grade = grades[categorical([0.5,0.3,0.2])];  
  }

  letter := 0;
  if grade = grade_a {
    letter = flip(0.9);
    
  } else if grade = grade_b {
    letter = flip(0.6);
    
  } else  {
    letter = flip(0.01);
  }

  // SAT;
  sat_low := 0;
  sat_high := 1;
  sats := [sat_high,sat_low];
  sat := 0;
  if intelligence = intelligence_high {
    sat = sats[categorical([0.8,0.2])];
    
  } else  {
    sat = sats[categorical([0.05,0.95])];
  }


 // What is the probability of the student achieving an A, given that he is intelligent?
 // observe(intelligence = intelligence_high);

 // observe(sat = sat_high);
 observe(letter = false);

 return (
        grade = grade_a,
        grade = grade_b,
        grade = grade_c,        
        intelligence = intelligence_low,
        intelligence = intelligence_high,        
        difficulty = difficulty_easy,
        difficulty = difficulty_hard,
        sat = sat_low,
        sat = sat_high,        
        letter = true,
        letter = false,        
        );

}