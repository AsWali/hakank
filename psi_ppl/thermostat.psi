/*
  Thermostat problem.

  OMEGA: Fast, casual Inference from Simple Parts 
  From  https://www.youtube.com/watch?v=oCvbqKE2tWA
  @ ~ 21min
  
  The Omega (Julia) model is here:
  https://github.com/zenna/Omega.jl/blob/master/OmegaModels/src/causal/thermostat.jl


  Cf ~/cplint/thermostat.pl
  Cf ~/blog/thermostat.blog

*/

// E[time,is_ac_on,is_window_open,outside_temp,room_temp,thermostat] = (1,1/4,1/2,62/3,95/4,68/3)
// (1,0.25,0.5,20.6666666666667,23.75,22.6666666666667)
def main() {

  morning := 0;
  afternoon := 1;
  evening := 2;

  time :=  [morning,afternoon,evening][categorical([1/3,1/3,1/3])];

  is_window_open := flip(0.5);

  // a.c. is off when window is closed
  is_ac_on := 0;
  if is_window_open {
    is_ac_on = false;
  } else {
    is_ac_on = flip(0.5);
  }

  // hottest at noon, cool at night
  outside_temp := 0;
  if time = morning {
    outside_temp = gauss(20,2);
  } else if time = afternoon {
    outside_temp = gauss(32,2);
  } else if time = evening {
    outside_temp = gauss(10,2);
  }
 

  // a.c. chills the room
  room_temp := 0;
  if is_ac_on {
    room_temp = gauss(20,2);
  } else {
    room_temp = gauss(25,2);
  }

  // great insulation
  thermostat := 0;
  if is_window_open {
    thermostat = (outside_temp + room_temp) / 2.0;
  } else {
    thermostat = room_temp;
  }


  // observe(is_ac_on = true);
  // observe(is_window_open = false);
  // observe(time = evening);  
  // observe(room_temp < 20.0);
  // observe(room_temp > 20.0);
  // observe(outside_temp > 10.0);

  return(time,
        is_ac_on,
        is_window_open,
        outside_temp,
        room_temp,
        thermostat);
}
