/*
   From https://reference.wolfram.com/language/ref/HypergeometricDistribution.html
   """
   Suppose an urn has 100 elements, of which 40 are special.
   ...
   Compute the probability that there are more than 25 special elements in a 
   draw of 50 elements.
     Answer: 0.0120902

   Compute the expected number of special elements in a draw of 50 elements.
     Answer: 20
   """

   cf ~/blog/urn_model.blog

*/

// n=100 is too slow so I scale it (though it's not the same thing)
// Here's the expectation for n=10
// E[countNumSpecial,r] = (2,992/3125)
// (2,0.31744)
def main() {
  special := 0;
  nonspecial := 1;
  elements := [special,nonspecial];

  // n := 100;
  n := 10;
  // numSpecial := 40;
  numSpecial := 4;  
  numNonSpecial := n - numSpecial;

  // numDraws := 50;
  numDraws := 5;  
  element := array(numDraws);
  countNumSpecial := 0;
  for i in [0..numDraws) {
    element[i] = elements[categorical([numSpecial/n,numNonSpecial/n])];
    if element[i] = special {
      countNumSpecial += 1;
    }
  }

  return (
         countNumSpecial,
         // countNumSpecial > 25
         countNumSpecial > 2
         );

}