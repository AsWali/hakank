/+

   https://www.youtube.com/watch?v=e1Ykk_CqKTY&t=458s

   Probabilistic Programming: What It Is and How It Works - Noel Welsh

   We can see either 1, 2, or 3 cats.
   There are 3 different enticements:

   - Milkshake
   - Fish
   - Nothing

   And there are different probabilities how many cats there are given
   an enticement, see below.

   Now: We see 3 cats, what is the probability that it's a milkshake?

   The video got the following (for 3 cats):
    - milkshake: 0.42
    - fish: 0.04
    - nothing: 0.03

   Normalized to percentage (from the video): 

   0.42/(0.42 + 0.04 + 0.03) milkshake
     0.85714285714285714286
   0.04/(0.42 + 0.04 + 0.03) fish
     0.081632653061224489796
   0.03/(0.42 + 0.04 + 0.03)  nothing
     0.061224489795918367347

   But this is not what we find...

   See ~/cplint/cat.pl
       ~/blog/cat.blog

   observe(cats = 3):
   ùîº[milkshake,fish,nothing,milkshakeCats,fishCats,nothingCats,cats] = (609/659,364/7249,270/7249,19971/7249,966/7249,810/7249,3)
   ~ (0.92412746585736,0.05021382259622,0.037246516760933,2.755000689750311,0.133259759966892,0.111739550282798,3)


   observe(cats==0):
   ùîº[milkshake,fish,nothing,milkshakeCats,fishCats,nothingCats,cats] = (15/37,5/74,16/37,0,0,0,0)
   ~ (0.405405405405405,0.067567567567568,0.432432432432432,0,0,0,0)

   
+/


//
// Note that we assume that milkshake and fish can be joined
def model1(){
  milkshake := bernoulli(0.6);
  fish      := bernoulli(0.1);
  nothing   := bernoulli(0.3);

  nums := [1,2,3];
  milkshakeCats := 0;
  if !nothing && milkshake {
     milkshakeCats = nums[categorical([0.1,0.2,0.7])];
  }

  fishCats := 0;
  if !nothing && fish {
    fishCats = nums[categorical([0.2, 0.4, 0.4])];    
  }
   
  nothingCats := 0;
  if nothing && !fish && !milkshake {
    nothingCats = nums[categorical([0.6, 0.3, 0.1])];
  } 

  // Total number of cats
  cats := milkshakeCats + fishCats + nothingCats;

  // observe(cats == 4);
  // observe(cats == 0);
  observe(cats == 3);  
  
  return (milkshake,fish,nothing,milkshakeCats,fishCats,nothingCats,cats);

}

// Atmost one enticement (fish or milkshake or nothing)
def model2(){
  milkshake := bernoulli(0.6);
  fish      := bernoulli(0.1);
  nothing   := bernoulli(0.3);

  nums := [1,2,3];
  milkshakeCats := 0;
  if !nothing && ! fish && milkshake {
     milkshakeCats = nums[categorical([0.1,0.2,0.7])];
  }

  fishCats := 0;
  if !nothing && fish && !milkshake {
    fishCats = nums[categorical([0.2, 0.4, 0.4])];    
  }
   
  nothingCats := 0;
  if nothing && !fish && !milkshake {
    nothingCats = nums[categorical([0.6, 0.3, 0.1])];
  } 

  // Total number of cats
  cats := milkshakeCats + fishCats + nothingCats;

  // observe(cats == 4);
  // observe(cats == 0);
  observe(cats == 3);  
  
  return (milkshake,fish,nothing,milkshakeCats,fishCats,nothingCats,cats);

}


def main() {
  return model1();
  // return model2();  
}