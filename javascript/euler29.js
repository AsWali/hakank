/* 

  Euler #29 in JavaScript.

  Problem 29:
  """
  Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

      2^2=4, 2^3=8, 2^4=16, 2^5=32
      3^2=9, 3^3=27, 3^4=81, 3^5=243
      4^2=16, 4^3=64, 4^4=256, 4^5=1024
      5^2=25, 5^3=125, 5^4=625, 5^5=3125

  If they are then placed in numerical order, with any repeats removed, we get the 
  following sequence of 15 distinct terms:

  4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

  How many distinct terms are in the sequence generated by a^b for 
  2 <= a <= 100 and 2 <= b <= 100?
  """ 

  This JavaScript program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my JavaScript page: http://www.hakank.org/javascript_progs/

*/

'use strict';
const {flatten,range2,timing2} = require('./js_utils.js');

// 26ms
const euler29a = function() {
    const min = 2;
    const max = 100;
    let h= {};
    for(let a = min; a <= max; a++) {
        for(let b = min; b <= max; b++) {
            h[BigInt(a)**BigInt(b)] = 1;            
        }
    }
    
    return Object.keys(h).length;
}

// 39ms
const euler29b = function() {
    return new Set(range2(2,100)
        .map(a=> 
                 range2(2,100)
                     .map(b=>
                          BigInt(a)**BigInt(b)
                         )
            ).flatten2()).size;
}


// timing2(euler29a); // 26ms
timing2(euler29b); // 39ms

