#=

  Euler #8 in Julia.

  Problem 8:
  """
  Find the greatest product of five consecutive digits in the
  1000-digit number.
  ...
  """

  This Julia program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Julia page: http://www.hakank.org/julia/

=#

include("Euler.jl")

# Keep it global so we don't get sore eyes...
#=
n1 = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
=#

# digits works with this
n = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450


# 0.04791558s
function euler8a()
    # a = split(n,"").|>i->parse(Int8,i)
    a = digits(n)
    len = length(a)
    max = 0
    for i in 1:(len-5+1)
        p = 1
        for j = 0:4
            p *= a[i+j]
            if p==0
                continue;
            end
        end
        if p > max
            max = p;
        end
    end
    return max;
end

# 0.07957408s
function euler8b()
    # a = split(n,"").|>i->parse(Int8,i)
    a = digits(n)
    len = length(a)
    max = 0
    for i in 1:len-5
        p = prod(a[i:i+4])
        if p > max
            max=p;
        end
    end
    return max;
end

# 0.11700825s
function euler8c()
    # a = split(n,"").|>i->parse(Int,i)
    a = digits(n)
    return maximum((1:(length(a)-5).|>i->prod(a[i:i+4])))
end


# 0.07845405s
function euler8d()
    # a = split(n,"").|>i->parse(Int8,i)
    a = digits(n)
    max = 0
    while length(a) > 5
        p = prod(a[1:5])
        popfirst!(a)
        if p > max
            max = p
        end
    end
    return max;
end

run_euler(euler8a)
# run_euler(euler8b)
# run_euler(euler8c)
# run_euler(euler8d)
