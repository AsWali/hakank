#=

  Euler #29 in Julia.

  Problem 29:
  """
  Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

      2^2=4, 2^3=8, 2^4=16, 2^5=32
      3^2=9, 3^3=27, 3^4=81, 3^5=243
      4^2=16, 4^3=64, 4^4=256, 4^5=1024
      5^2=25, 5^3=125, 5^4=625, 5^5=3125

  If they are then placed in numerical order, with any repeats removed, we get the
  following sequence of 15 distinct terms:

  4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

  How many distinct terms are in the sequence generated by a^b for
  2 <= a <= 100 and 2 <= b <= 100?
  """

  This Julia program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Julia page: http://www.hakank.org/julia/

=#

include("Euler.jl")


# 0.00826962s
function euler29a()
    min = 2
    max = 100
    h = Dict()
    for a = min:max
        for b = min:max
            h[BigInt(a)^BigInt(b)] = 1
        end
    end

    return keys(h)|>length
end

# using Set
# 0.20847729s
function euler29b()
    s = (2:100).|>a->(2:100).|>b->BigInt(a)^BigInt(b)
    return Set(vcat(s...))|>length
end

# Using Dict instead
# 0.23657872s
function euler29c()
    s = (2:100).|>a->(2:100).|>b->BigInt(a)^BigInt(b)=>1
    return Dict(vcat(s...))|>length
end


# run_euler(euler29a)
run_euler(euler29b)
# run_euler(euler29c)
