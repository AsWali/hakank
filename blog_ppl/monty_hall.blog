/*
  Monty Hall problem

  From the PyMC3 model in the talk
  "Carlo Revolution is Open Source: Probabilistic Programming with PyMC3?Austin Rochford"
  https://www.safaribooksonline.com/videos/open-data-science/9780135432792/9780135432792-ODSC_11
  Around time 9:00

  Output:
"""
....
=======  LW Trial Stats =========
Log of average likelihood weight (this trial): -0.6932531861780546
Average likelihood weight (this trial): 0.49994700000014386
Fraction of consistent worlds (this trial): 0.666663
Fraction of consistent worlds (running avg, all trials): 0.666663
======== Query Results =========
Number of samples: 1000000
Distribution of values for prize
        d3      0.6665326524610727
        d1      0.3334673475387975
======== Done ========
"""

  Which mean that if we selected d1 it will be 1/3 chance of being the price door.
  Changing to d3 would - however - give a 2/3 change of getting the price.

*/


type Door;
distinct Door d1,d2,d3; // There are 3 doors.

// Assumption (WLOG): We alway select door 1!

// The prize can be behind any door 1..3.
random Door prize ~ UniformChoice({d for Door d});

// Which door will Monty open?
// random Door open ~
//    case prize in
//      {d1 -> Categorical({d1 -> 0.0, d2 -> 0.5, d3 -> 0.5}),
//       d2 -> Categorical({d1 -> 0.0, d2 -> 0.0, d3 -> 1.0}),
//       d3 -> Categorical({d1 -> 0.0, d2 -> 1.0, d3 -> 0.0})
//       }
//    ;

// Simpler:
random Door open ~
   case prize in
     {d1 -> Categorical({d2 -> 0.5, d3 -> 0.5}),
      d2 -> d3, 
      d3 -> d2 
      }
   ;


// We see that Monty opens door 2.
obs open = d2;

// What are the probabilities that the price is behind
// door d1 (the one we selected, i.e dont' switch) or door d3 (i.e. to switch door)
query(prize);