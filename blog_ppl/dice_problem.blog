/*
   Dice problem.

   From Think Bayes, page 21.
   """
   Suppose I have a box of dice that contains a 4-sided die, a 6-sided die, an
   8-sided die, a 12-sided die, and a 20-sided die. If you have ever played
   Dungeons & Dragons, you know what I am talking about.

   Suppose I select a die from the box at random, roll it, and get a 6. What is
   the probability that I rolled each die?

   ...
   
   What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?
   """

   1) We throw a 6
       Distribution of values for dice
        6       0.3940305436538295
        8       0.2984244581354674
        12      0.1953710599363614
        20      0.11217393827435161
        
   2) What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?
      Distribution of values for dice
        8       0.9403335917732026
        12      0.05806318944282228
        20      0.0016032187840023726


*/

/*
type Dice;
distinct Dice dice4, dice6, dice8, dice12, dice20;

// We pick one dice
random Dice dice ~ UniformChoice({d for Dice d});

// And then throws it a couple of times
random Integer throw(Integer i) ~
       case dice in
       {
         dice4 -> UniformInt(1,4),
         dice6 -> UniformInt(1,6),
         dice8 -> UniformInt(1,8),
         dice12 -> UniformInt(1,12),
         dice20 -> UniformInt(1,20)
};

// The value of the throws.
obs throw(0) = 6; // First throw
obs throw(1) = 6; // "What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?"
obs throw(2) = 8;
obs throw(3) = 7;
obs throw(4) = 7;
obs throw(5) = 5;
obs throw(6) = 4;

// What dice was it?
query dice;


*/

// A simpler approach

random Integer dice ~ UniformChoice({4,6,8,12,20});
random Integer throw(Integer i) ~ UniformInt(1,dice);

// The value of the throws.
obs throw(0) = 6; // First throw
obs throw(1) = 6; // "What if we roll a few more times and get 6, 8, 7, 7, 5, and 4?"
obs throw(2) = 8;
obs throw(3) = 7;
obs throw(4) = 7;
obs throw(5) = 5;
obs throw(6) = 4;

query dice;
