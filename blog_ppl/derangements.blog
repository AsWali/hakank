/*

  From http://rosettacode.org/wiki/Permutations/Derangements
  """
  Permutations/Derangements
  A derangement is a permutation of the order of distinct items in which 
  no item appears in its original place.

  For example, the only two derangements of the three items 
    (0, 1, 2) are (1, 2, 0), and (2, 0, 1).
  
  The number of derangements of n distinct items is known as the subfactorial of n, 
  sometimes written as !n. There are various ways to calculate !n.
  ...
  """

  For different n:
  * n = 1:
    Distribution of values for total
	1	1.0

  * n = 2;
    Distribution of values for total
	0	0.5004901666566741
	2	0.4995098333433459


  * n = 3;
    Distribution of values for total
	0	0.33385855129877234
	1	0.5002476027551196
	3	0.16589384594606388


  * n = 4;
    Distribution of values for total
	0	0.376565008025688
	1	0.3366506153023047
	2	0.24901016586410177
	4	0.037774210807918485


  * n = 5;
    Distribution of values for total
	0	0.3592641261498004
	1	0.38843626806832576
	2	0.1687253613666192
	3	0.07831800262811907
	5	0.0052562417871221045


  * n = 6;
    Distribution of values for total
	0	0.380771663504107
	1	0.36559139784945777
	2	0.15686274509803752
	3	0.06767868437697588
	4	0.027197975964579138
	6	0.0018975332068311025


  * n = 7;
    Distribution of values for total
	0	0.3778877887788781
	1	0.3712871287128714
	2	0.1749174917491751
	3	0.05775577557755791
	4	0.01485148514851489
	5	0.0033003300330033103


  * n = 8;
    Distribution of values for total
	0	0.4051724137931038
	1	0.28448275862068984
	2	0.21982758620689685
	3	0.06896551724137936
	4	0.017241379310344862
	5	0.004310344827586215


*/

fixed Integer n = 5;

Random Integer p(Integer i) ~ UniformInt(1,n);

// How many are in the i'th position
random Integer total ~ toInt(sum({1 for Integer i: i >= 1 & i <= n & i == p(i)})); // UniformInt(0,n);

// Ensure unicity. See all_different.blog .
obs sum({ 1 for Integer i, Integer j: i >= 1 & i<= n & j > i & j <= n & p(i) == p(j) }) = 0.0;

// obs total = toInt(sum({1 for Integer i: i >= 1 & i <= n & i == p(i)}));

// obs total = 0;

// query {p(i) for Integer i: i >= 1 & i <= n};



query total;