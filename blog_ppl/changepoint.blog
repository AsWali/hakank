/*
  From https://nishanthu.github.io/articles/ChangePointAnalysis.html

  See ~/jags/change_point.R
"""
out$cp %>% as.vector %>% mean %>% round(1)
[1] 13.5
"""

   This BLOG model finds the checkpoint quite good:
"""
Mean: 12.9096687827145
DATA (5 largest probabilities):
13: 0.9096022838562561  11.8248296901313
12: 0.09035513815754694  1.08426165789056
14: 3.632102177361057E-5  0.000508494304830548
11: 6.228644410525914E-6  6.85150885157851e-05
10: 1.988053095242102E-8  1.9880530952421e-07
"""

  90% prob that it's 13. Quite nice!

*/

/*
model {
  for (i in 1:N) {
    mu0[i] = ifelse(i < cp, mu1, mu2)
    x[i] ~ dnorm(mu0[i], 1)
  }  
  mu1 ~ dunif(0, mu)
  mu2 ~ dunif(mu, 10*mu)
  cp ~ dunif(0, N)   
}
*/

fixed Integer N = 33;
fixed Real mu = 2.405677; // mean(y)


Random Real mu1 ~ UniformReal(0, mu);
Random Real mu2 ~ UniformReal(mu, 10*mu);
Random Integer cp ~ UniformInt(0, N);

Random Real mu0(Integer i) ~ if i < cp then mu1 else mu2;
Random Real y(Integer i) ~ Gaussian(mu0(i), 1);

query mu1;
query mu2;
query cp;
// query {mu0(i) for Integer i: i >= 0 & i < N}; // This works but it's not usable...


// c(rnorm(13, mean=0, sd=0.5), rnorm(20, mean=4, sd=0.5))
obs y(0) = 0.90685440;
obs y(1) = 0.38219559;
obs y(2) = 0.13508408;
obs y(3) = -0.96054590;
obs y(4) = 0.78553871;
obs y(5) = 0.06791336;
obs y(6) = -0.09750806;
obs y(7) = -0.85431057;
obs y(8) = 0.33478539;
obs y(9) = 0.76388689;
obs y(10) = 0.52911522;
obs y(11) = -0.41226421;
obs y(12) = 1.53302740;
obs y(13) = 5.01118838;
obs y(14) = 4.75164473;
obs y(15) = 3.79149212;
obs y(16) = 3.97544567;
obs y(17) = 4.33985561;
obs y(18) = 4.52511631;
obs y(19) = 4.21723600;
obs y(20) = 4.22733898;
obs y(21) = 3.80925885;
obs y(22) = 3.65504091;
obs y(23) = 3.25267865;
obs y(24) = 3.85339052;
obs y(25) = 3.40136529;
obs y(26) = 4.21462117;
obs y(27) = 3.94033196;
obs y(28) = 4.00900359;
obs y(29) = 4.44148942;
obs y(30) = 4.23449516;
obs y(31) = 4.52032000;
obs y(32) = 4.41335270;
