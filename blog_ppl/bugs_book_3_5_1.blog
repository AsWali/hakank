/*
  The BUGS Book
  Example 3.5.1 Heart transplants: learning from data

  ~/jags/bugs_book_3_5_1.R
  """
  model {
    yT ~ dbin(pT, nT)
    pT ~ dunif(0, 1)
    for (i in 1:8) {
      sP[i] ~ dexp(theta)
    }
    theta ~ dgamma(0.001, 0.001)
    surv.t <- pT/theta # expected survival with transplant
    Is <- surv.t - 2
  }

  Data: list(yT=8, nT=10, sP=c(2,3,4,4,6,7,10,12))

  Output:
         Mean      SD  Naive SE Time-series SE
Is     3.1442 2.28250 0.0080699      0.0085034
pT     0.7500 0.12014 0.0004248      0.0005856
surv.t 5.1442 2.28250 0.0080699      0.0085034
theta  0.1667 0.05899 0.0002086      0.0002086
  """
*/

// fixed Integer yT = 8;
fixed Integer nT = 10;

// Gives a lot of 0.0's which is not acceptable by Exponential! And _huge_ number as well (e.g. Infinity)
// random Real theta ~ Gamma(0.001, 0.001); 
random Real theta ~ Gamma(0.1, 0.1); // A more reasonable range.
random Integer yT ~ Binomial(nT, pT);
random Real pT ~ UniformReal(0,1);
// random Real sP(Integer i) ~ Exponential(theta+0.0000000001); // Add some epsilon...
random Real sP(Integer i) ~ Exponential(theta); // Epsilon is not needed with "reasonable" Gamma.
random Real surv_t ~ pT/theta;
random Real Is ~ surv_t - 2.0;

obs yT = 8;

obs sP(0) = 2.0;
obs sP(1) = 3.0;
obs sP(2) = 4.0;
obs sP(3) = 4.0;
obs sP(4) = 6.0;
obs sP(5) = 7.0;
obs sP(6) = 10.0;
obs sP(7) = 12.0;

query Is;
query pT;
query surv_t;
query theta;
