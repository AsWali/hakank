/*

  Can I use mean in a distribution? Yes!

*/

fixed Integer N = 100;

// This works, i.e. one can generate random numbers (no surprise!)

Random Real y(Integer i) ~ Gaussian(10,3);


Random Real sum_y ~ sum({y(i) for Integer i: i >= 0 & i <= N});
Random Real mean_y ~  sum_y / N;
Random Real variance_y ~  sum({(y(i)-mean_y)^2 for Integer i: i >= 0 & i <= N}) / toReal(N);

Random Real sum2(Real[] data) ~ sum({data[i] for Integer i: i >= 0 & i <= N});
// Random Integer length(Real[] data) ~ sum({data(i) for Integer i: i >= 0 & i <= N});
Random Real mean(Real[] data) ~  sum2(data) / N;

/*
Random Real mean2 ~ UniformReal(0,1000); // uninformative priors
Random Real variance2 ~ UniformReal(0,1000);
Random Real x(Integer i) ~ Gaussian(mean2, variance2);
*/

// Ensure that x = y
// Nope! This hangs BLOG (or it's very slow)
// Random Boolean check ~ forall Integer i (abs(y(i)-x(i))<0.01 );
// obs check = true;

query sum_y;
query mean_y;
query variance_y;

// query mean2;
// query variance2;

// This give 1000 lists of length N!
// query {y(i) for Integer i: i >= i & i <= N};
// Can we take the mean of these?
// query {mean_y(y(i)) for Integer i: i >= i & i <= N}; // Nope! "Exception in thread "main"
// query x(1);