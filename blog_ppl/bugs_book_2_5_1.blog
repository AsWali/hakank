/*
  The BUGS Book
  Example 2.5.1, "The how many trick"

  Cf ~/jags/bugs_book_2_5_1.jags
  """
  model {
    for (i in 1:20) {
     Y[i] ~ dgamma(4, 0.04)
    }
    cum[1] <- Y[1]
    for (i in 2:20) {
      cum[i] <- cum[i - 1] + Y[i]
    }
    for (i in 1:20) {
      cum.step[i] <- i*step(1000 - cum[i])
      x[i] <- ifelse(cum[i] < 1001, 1, 0) # 
    }
    # number <- ranked(cum.step[], 20) # maximum number in cum.step ## NOTE: ranked is not in JAGS
    number <- sort(cum.step[]) # maximum number in cum.step
    check <- equals(cum.step[20], 0) # always 1 if I=20 big enough
  }

  Output:
           Mean       SD  Naive SE Time-series SE
qx[1]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[2]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[3]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[4]  1.000e+00 0.000000 0.000e+00      0.000e+00
x[5]  9.999e-01 0.012247 5.000e-05      5.000e-05
x[6]  9.976e-01 0.049101 2.005e-04      2.043e-04
x[7]  9.810e-01 0.136350 5.566e-04      5.566e-04
x[8]  9.141e-01 0.280293 1.144e-03      1.131e-03
x[9]  7.578e-01 0.428418 1.749e-03      1.741e-03
x[10] 5.222e-01 0.499512 2.039e-03      2.039e-03
x[11] 2.825e-01 0.450235 1.838e-03      1.793e-03
x[12] 1.195e-01 0.324340 1.324e-03      1.307e-03
x[13] 4.015e-02 0.196313 8.014e-04      8.014e-04
x[14] 9.867e-03 0.098841 4.035e-04      4.035e-04
x[15] 2.117e-03 0.045959 1.876e-04      1.897e-04
x[16] 4.500e-04 0.021209 8.658e-05      8.988e-05
x[17] 1.667e-05 0.004082 1.667e-05      1.667e-05
x[18] 0.000e+00 0.000000 0.000e+00      0.000e+00
x[19] 0.000e+00 0.000000 0.000e+00      0.000e+00
x[20] 0.000e+00 0.000000 0.000e+00      0.000e+00
  """

*/

fixed Integer n = 20;

random Real y(Integer i) ~ Gamma(3.0,0.04);
random Real cum(Integer i) ~ if i == 1 then y(1)+1 else cum(i-1) + y(i) + i;

random Real cum_step(Integer i) ~ if cum(i) > 1000.0 then i*cum(i) else 0.0;
// A changepoint.
random Real x(Integer i) ~ if cum(i) < 1001.0 then 1.0 else 0.0;

random Real number ~ max({cum_step(i) for Integer i: i>= 1 & i <= 20 });
random Boolean check ~ if cum_step(n) == 0.0 then true;

query number;
query check;

// query {y(i) for Integer i: i>=1 & i <= n};
/*
query y(1);
query y(2);
query y(3);
query y(4);
query y(5);
query y(6);
query y(7);
query y(8);
query y(9);
query y(10);
query y(11);
query y(12);
query y(13);
query y(14);
query y(15);
query y(16);
query y(17);
query y(18);
query y(19);
query y(20);
*/

// query {x(i) for Integer i: i>=1 & i <= n};
// Where is the change point?
query min({i for Integer i: i>=1 & i <= n & x(i) == 0.0  });
/*
query x(1);
query x(2);
query x(3);
query x(4);
query x(5);
query x(6);
query x(7);
query x(8);
query x(9);
query x(10);
query x(11);
query x(12);
query x(13);
query x(14);
query x(15);
query x(16);
query x(17);
query x(18);
query x(19);
query x(20);
*/

// query {cum(i) for Integer i: i>=1 & i <= n};
/*
query cum(1);
query cum(2);
query cum(3);
query cum(4);
query cum(5);
query cum(6);
query cum(7);
query cum(8);
query cum(9);
query cum(10);
query cum(11);
query cum(12);
query cum(13);
query cum(14);
query cum(15);
query cum(16);
query cum(17);
query cum(18);
query cum(19);
query cum(20);
*/

// query {cum_step(i) for Integer i: i>=1 & i <= n};