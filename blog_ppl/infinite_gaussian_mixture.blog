/*
  From
  Yi Wu, Lei Li, Stuart Russell, Rastislav Bodik
  "Swift: Compiled Inference for Probabilistic Programming Languages"
  Page 3
*/

type Cluster;
type Data;

distinct Data D[20]; // 20 data points
#Cluster ~ Poisson(4); // Number of clusters

random Real mu(Cluster c) ~ Gaussian(0.0,10.0); // Cluster mean
random Cluster z(Data d) ~ UniformChoice({c for Cluster c});

random Real x(Data d) ~ Gaussian(mu(z(d)), 1.0); // data

obs x(D[0]) = 0.1; // omit other data points


query size({c for Cluster c}); // The size of clusters

// Show the data
// query x(D[0]); // This works
query x(D[1]);

// query x({d for Data d}); // This don't work



/*
  The default blog.sample.LWSampler throws a weird error message:
  """
  Exception in getProb for variable x(D[0])
  Fatal error: 
  blog.model.Model$1 cannot be cast to java.lang.Number
  """


  However, blog.sample.MHSampler works
  $ blog infinite_gaussian_mixture.blog -s blog.sample.MHSampler
....
======== Query Results =========
Number of samples: 10000
Distribution of values for size({c for Cluster c : true})
        1       0.07490000000000065
        2       0.14230000000000276
        3       0.22280000000000486
        4       0.21230000000000476
        5       0.14040000000000283
        6       0.10850000000000148
        7       0.059700000000000385
        8       0.02500000000000019
        9       0.011100000000000087
        10      0.0012000000000000112
        11      0.0018000000000000158


*/