/*
   AR(1)

   Cf ~/stan/ar1.R and ~/stan/ar1.stan
  From Stan Users Guide, section 3.1 (page 51) "Autoregressive Models"

From the R model
"""
Result:
       mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff Rhat
alpha  0.73    0.00 0.10  0.54  0.67  0.73  0.80  0.92 14499    1
beta   0.16    0.00 0.10 -0.04  0.09  0.16  0.23  0.36 14601    1
sigma  0.35    0.00 0.03  0.31  0.34  0.35  0.37  0.41 19812    1
lp__  53.17    0.01 1.25 49.90 52.60 53.50 54.09 54.61 12256    1
"""

*/

Random Real alpha ~ UniformReal(-2,2); // Gaussian(2,2);
Random Real beta ~ UniformReal(-2,2); // Gaussian(2,2);
Random Real sigma ~ UniformReal(0,2); // Gamma(2,2); // > 0

// LWSampler don't like this (consistent worlds == 0!)
// Random Real y(Integer i) ~ if i > 0 then  Gaussian(alpha + beta * y(i-1), sigma);

// Ah, it seems that all y's must be handled. So this is much better for LWSampler:
// Note: sigma in Stan is standard deviation, in BLOG it's variance! So we square sigma to
// get at similar value as the Stan model.
Random Real y(Integer i) ~ if i == 0 then y(0) else Gaussian(alpha + beta * y(i-1), sigma^2);

// This don't seems to be needed with the Gamma(2,2) prior.
Random Boolean check_sigma ~  if sigma > 0.0 then true else false;

query alpha;
query beta;
query sigma;

// obs check_sigma = true;
// obs sigma > 0.0 = true;

obs y(0) = 0.705429;
obs y(1) = 1.43062;
obs y(2) = 0.618161;
obs y(3) = 0.315107;
obs y(4) = 1.09993;
obs y(5) = 1.49022;
obs y(6) = 0.690016;
obs y(7) = 0.587519;
obs y(8) = 0.882984;
obs y(9) = 1.0278;
obs y(10) = 0.998615;
obs y(11) = 0.878366;
obs y(12) = 1.17405;
obs y(13) = 0.532718;
obs y(14) = 0.486417;
obs y(15) = 1.13685;
obs y(16) = 1.32453;
obs y(17) = 1.3661;
obs y(18) = 0.914368;
obs y(19) = 1.07217;
obs y(20) = 1.1929;
obs y(21) = 0.418664;
obs y(22) = 0.889512;
obs y(23) = 1.47218;
obs y(24) = 1.13471;
obs y(25) = 0.410168;
obs y(26) = 0.639765;
obs y(27) = 0.664874;
obs y(28) = 1.12101;
obs y(29) = 1.22703;
obs y(30) = -0.0931769;
obs y(31) = 0.4275;
obs y(32) = 0.901126;
obs y(33) = 1.01896;
obs y(34) = 1.27746;
obs y(35) = 1.17844;
obs y(36) = 0.554775;
obs y(37) = 0.325423;
obs y(38) = 0.494777;
obs y(39) = 1.05813;
obs y(40) = 1.10177;
obs y(41) = 1.11225;
obs y(42) = 1.34575;
obs y(43) = 0.527594;
obs y(44) = 0.323462;
obs y(45) = 0.435063;
obs y(46) = 0.739342;
obs y(47) = 1.05661;
obs y(48) = 1.42723;
obs y(49) = 0.810924;
obs y(50) = 0.0114801;
obs y(51) = 0.698537;
obs y(52) = 1.13063;
obs y(53) = 1.5286;
obs y(54) = 0.968813;
obs y(55) = 0.360574;
obs y(56) = 0.959312;
obs y(57) = 1.2296;
obs y(58) = 0.994434;
obs y(59) = 0.59919;
obs y(60) = 0.565326;
obs y(61) = 0.855878;
obs y(62) = 0.892557;
obs y(63) = 0.831705;
obs y(64) = 1.31114;
obs y(65) = 1.26013;
obs y(66) = 0.448281;
obs y(67) = 0.807847;
obs y(68) = 0.746235;
obs y(69) = 1.19471;
obs y(70) = 1.23253;
obs y(71) = 0.724155;
obs y(72) = 1.1464;
obs y(73) = 0.969122;
obs y(74) = 0.431289;
obs y(75) = 1.03716;
obs y(76) = 0.798294;
obs y(77) = 0.94466;
obs y(78) = 1.29938;
obs y(79) = 1.03269;
obs y(80) = 0.273438;
obs y(81) = 0.589431;
obs y(82) = 1.2741;
obs y(83) = 1.21863;
obs y(84) = 0.845632;
obs y(85) = 0.880577;
obs y(86) = 1.26184;
obs y(87) = 0.57157;
obs y(88) = 0.684231;
obs y(89) = 0.854955;
obs y(90) = 0.664501;
obs y(91) = 0.968114;
obs y(92) = 0.472076;
obs y(93) = 0.532901;
obs y(94) = 1.4686;
obs y(95) = 1.0264;
obs y(96) = 0.27994;
obs y(97) = 0.592303;
obs y(98) = 0.828514;
obs y(99) = 0.625841;
