/*

   Logistic regression - Challenger

   See ~/jags/logistic_regression_challenger.R
   """
   model {
     for (i in 1:N){
       y[i] ~ dbern(p[i])
       p[i] <- 1 / (1 + exp(-z[i]))
       z[i] <- w0 + w1 * x[i]
     }
     w0 ~ dnorm(0, .001)
     w1 ~ dnorm(0, .0001)

   Output:
      Mean     SD  Naive SE Time-series SE
w0 16.8900 7.7265 0.0122167       0.290180
w1 -0.2602 0.1135 0.0001794       0.004232

2. Quantiles for each variable:

     2.5%     25%     50%     75%    97.5%
w0  4.131 11.3621 16.1240 21.5029 34.27954
w1 -0.516 -0.3279 -0.2488 -0.1789 -0.07332
   """

From https://www.zinkov.com/posts/2012-06-27-why-prob-programming-matters/
"Logistic Regression"
"""
Logistic Regression can be seen as a generalization of Linear Regression where the output is 
transformed
to lie between 0 and 1. This model only differs from the previous one by a single line, illustrating that
adding this complexity does not require starting from scratch. The point with probabilistic programming
is you are able to explore slightly more complex models very easily.
"""


From https://www.stat.ubc.ca/~bouchard/courses/stat520-sp2014-15/lecture/2015/02/27/notes-lecture3.html
x = 66,70,69,68,67,72,73,70,57,63,70,78,67,53,67,75,70,81,76,79,75,76,58
y = 1,0,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,0,1,0


*/

fixed Integer N = 23;

Random Real w0 ~ Gaussian(0,100); // Somewhat more reasonable range.
Random Real w1 ~ Gaussian(0,100); // Ibid.

Random Integer y(Integer i) ~ Bernoulli(p(i));
Random Real p(Integer i) ~ 1.0/(1.0+ exp(-z(i))); // logistic...
Random Real z(Integer i) ~ w0 + w1 * x(i);
Random Integer x(Integer i) ~ DontCare(); // Gaussian(100,10);

query w0;
query w1;

obs x(0) = 66;
obs x(1) = 70;
obs x(2) = 69;
obs x(3) = 68;
obs x(4) = 67;
obs x(5) = 72;
obs x(6) = 73;
obs x(7) = 70;
obs x(8) = 57;
obs x(9) = 63;
obs x(10) = 70;
obs x(11) = 78;
obs x(12) = 67;
obs x(13) = 53;
obs x(14) = 67;
obs x(15) = 75;
obs x(16) = 70;
obs x(17) = 81;
obs x(18) = 76;
obs x(19) = 79;
obs x(20) = 75;
obs x(21) = 76;
obs x(22) = 58;

obs y(0) = 1;
obs y(1) = 0;
obs y(2) = 1;
obs y(3) = 1;
obs y(4) = 1;
obs y(5) = 1;
obs y(6) = 1;
obs y(7) = 1;
obs y(8) = 0;
obs y(9) = 0;
obs y(10) = 0;
obs y(11) = 1;
obs y(12) = 1;
obs y(13) = 0;
obs y(14) = 1;
obs y(15) = 1;
obs y(16) = 1;
obs y(17) = 1;
obs y(18) = 1;
obs y(19) = 1;
obs y(20) = 0;
obs y(21) = 1;
obs y(22) = 0;

