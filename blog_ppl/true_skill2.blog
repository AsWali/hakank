/*
   True skill

   From
   Andrew D. Gordon, Thomas A. Henzinger, Microsoft Research, Aditya V. Nori, Sriram K. Rajamani
   "Probabilistic Programming"
   page 6 (172)

   Note: After I simplified the model from the paper, it's the same as true_skill.blog.
   So I did some generalizations...

*/

fixed Integer numPersons = 3;

type Person;
distinct Person person[3];

Random Real skill(Person p) ~ Gaussian(100,10);
Random Real performance(Person p) ~ Gaussian(skill(p), 15);

// Game, Person, Person = Winner
Random Person winner(Integer game, Person p1, Person p2) ~
       if performance(p1) > performance(p2) then p1 else p2;

/*
// Generalizing the observations. 
// However it don't work. Can one don't index person with Integer?
// Does it have to be a literal integer?
Random Boolean check ~
       forall Integer i
          i > 0 & i <= 3 & performance(person[i-1]) > performance(person[i]);
obs check = true;
*/

// query person[0];

// First game: A vs B: A won
obs winner(0, person[0], person[1]) = person[0];

// second game: B vs C, B won
obs winner(1, person[1], person[2]) = person[1];

// third game: A vs C, A won
obs winner(2, person[0], person[2]) = person[0];


query performance(person[0]);
query performance(person[1]);
query performance(person[2]);

// query {performance(p) for Person p};
// Gives the following as result:
// [101.08742186552733, 96.93808614648383, 98.31868762578426]      6.053268765133136E-4
// [103.44725931604032, 98.54251037451233, 92.86070170322701]      6.053268765133136E-4

// query {skill(p) for Person p};


