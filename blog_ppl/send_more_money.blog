/*
  SEND + MORE = MONEY

  Well, not so good. But it's quite hard to generate the single correct permutation:
    S:9 E:5 N:6 D:7 M:1 O:0 R:8 Y:2

"""
========  LW Trial Stats =========
Log of average likelihood weight (this trial): -18.52604125961019
Average likelihood weight (this trial): 9.000000000000028E-9
Fraction of consistent worlds (this trial): 9.0E-6
Fraction of consistent worlds (running avg, all trials): 9.0E-6
======== Query Results =========
Number of samples: 1000000
Distribution of values for {i, x(i) for Integer i : ((i >= 1) & (i <= n))}
	[[7, 8], [2, 5], [3, 6], [4, 7], [1, 9], [6, 0], [8, 2], [5, 1]]	1.0
======== Done ========
"""

*/


fixed Integer n = 8; // Number of digits

fixed Integer S = 1;
fixed Integer E = 2;
fixed Integer N = 3;
fixed Integer D = 4;
fixed Integer M = 5;
fixed Integer O = 6;
fixed Integer R = 7;
fixed Integer Y = 8;

// The domain
random Integer x(Integer i) ~ UniformInt(0,9);

random Integer send  ~              1000*x(S) + 100*x(E) + 10*x(N) + x(D);
random Integer more  ~              1000*x(M) + 100*x(O) + 10*x(R) + x(E);
random Integer money ~ 10000*x(M) + 1000*x(O) + 100*x(N) + 10*x(E) + x(Y);


// Constraints

// All different
obs sum({ 1 for Integer i, Integer j: i >= 1 & i<= n & j > i & j <= n & i != j & x(i) == x(j) }) = 0.0;

obs send + more = money;
obs x(S) > 0 = true;
obs x(M) > 0 = true;

// It works with a little help....
obs x(S) = 9;
obs x(E) = 5;
obs x(N) = 6;
// obs x(D) = 7;
// obs x(M) = 1;
// obs x(O) = 0;
// obs x(R) = 8;
//  obs x(Y) = 2;

// query {i,x(i) for Integer i: i >= 1 & i <= n};
query {i,x(i) for Integer i: i >= 1 & i <= n};
