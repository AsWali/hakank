/*
   From BLOG example/aircraft-static.blog

*/

var model = function() {


    // #Aircraft ~ Poisson(3.0);
    var numAircraft = poisson(3.0);

    // #Blip ~ Poisson(2.0);
    var numBlip = poisson(2.0);

    // #Blip(Source = a) ~ Poisson(1.0);
    var blipPerAircraft = function(a) {
        return poisson(1.0);
    }
    var sumBlip = sum(mapN(function(a) { return blipPerAircraft(a);},numAircraft));
    
    var Location = function(a) {
        return uniform(100.0, 200.0);
    }

    var BlipLocation = function(b) {
        if (blipPerAircraft(b) > 0) {
            return Gaussian({mu:Location(blipPerAircraft(b)), sigma:1.0});
        } else {
            return Uniform({a:90.0, b:210.0});
        }
    }

    // obs {b for Blip b} = {b1, b2, b3, b4};
    condition(sumBlip == 4);

    // observe(BlipLocation(0),156);
    // observe(BlipLocation(1),133);
    // observe(BlipLocation(2),158);
    // observe(BlipLocation(3),180);

    return {
        numAircraft:numAircraft,
        sumBlip:sumBlip,
        locationB0:Location(0),
        // locationB1:Location(1),
        // locationB2:Location(2),
        // locationB3:Location(3),
    }

}

var d = Infer({method:"MCMC",kernel:"MH",samples:100000,burn:10000,verbose:true},model);
// var d = Infer(model);
// display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

exp_map(d,["locationB0", // "locationB1", "locationB2", "locationB3",
           "numAircraft","sumBlip",
          ]);
