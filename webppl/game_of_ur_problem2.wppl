/*
   https://www.allendowney.com/blog/2018/10/21/the-game-of-ur-problem/
   """
   Here’s a probability puzzle to ruin your week.

   In the Royal Game of Ur, players advance tokens along a track with 14 spaces. 
   To determine how many spaces to advance, a player rolls 4 dice with 4 sides. Two corners 
   on each die are marked; the other two are not. The total number of marked corners — 
   which is 0, 1, 2, 3, or 4 — is the number of spaces to advance.

   For example, if the total on your first roll is 2, you could advance a token to space 2. 
   If you roll a 3 on the next roll, you could advance the same token to space 5.

   Suppose you have a token on space 13. How many rolls did it take to get there?
   """

   See:
   https://www.allendowney.com/blog/lions-and-tigers-and-bears/

   Allen Downey's solution:
   http://nbviewer.jupyter.org/github/AllenDowney/ThinkBayes2/blob/master/solutions/game_of_ur_soln.ipynb?flush=true

   cf ~/blog/game_of_ur_problem.blog

   Cf game_of_ur_problem.wppl

   This model use recursion with arrays
*/

/*
  From game_of_ur_problem.wppl
  method:"enumerate",maxExecutions:100000:
  Marginal:
    {"numRolls":6} : 0.33439111463704896
    {"numRolls":7} : 0.31237604125347385
    {"numRolls":5} : 0.2528758429194738
    {"numRolls":4} : 0.09916699722332321
    {"numRolls":8} : 0.0011900039666798874


  method:"rejection",samples:10000:
  Marginal:
    {"numRolls":6} : 0.2089
    {"numRolls":7} : 0.2007
    {"numRolls":5} : 0.1646
    {"numRolls":8} : 0.1521
    {"numRolls":9} : 0.095
    {"numRolls":4} : 0.0682
    {"numRolls":10} : 0.0589
    {"numRolls":11} : 0.0274
    {"numRolls":12} : 0.0143
    {"numRolls":13} : 0.005
    {"numRolls":14} : 0.0027
    {"numRolls":15} : 0.0014
    {"numRolls":16} : 0.0005
    {"numRolls":17} : 0.0003

    This model (rejection, 10000 samples):
    Marginal:
    {"len":6} : 0.2285
    {"len":7} : 0.1967
    {"len":5} : 0.1945
    {"len":8} : 0.1424
    {"len":9} : 0.0823
    {"len":4} : 0.0734
    {"len":10} : 0.0446
    {"len":11} : 0.0216
    {"len":12} : 0.0103
    {"len":13} : 0.0033
    {"len":14} : 0.0011
    {"len":16} : 0.0006
    {"len":15} : 0.0005
    {"len":17} : 0.0002


*/
var model = function() {

    var roll = function(arr) {
        var s = sum(arr);
        if (s == 13) {
            return arr;
        } else if (s > 13) {
            return [];
        } else {
            return roll(arr.concat(randomInteger(5)));
        }
    }

    var a = roll([]);
    
    var sumRoll = sum(a);
    
    condition(sum(a) == 13);
    return {
        len:a.length,
    };
    
}

// var d = Infer(model);
// var d = Infer({method:"enumerate",maxExecutions:100000},model);
var d = Infer({method:"rejection",samples:10000},model);
// var d = Infer({method:"rejection"},model);
display(d);
