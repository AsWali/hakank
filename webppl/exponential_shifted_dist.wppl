/*
   Generating Shifted Exponential distribution

   From Handbook on probability distributions
   page 59ff

*/

// From Handbook on probability distributions
// page 60
// """
// The random generation is simple: just add Ï„ to the
// algorithm of exponential distribution
// """
var shifted_exponential_dist = function(lambda,t) {
    var u = uniform(0,1);
    return -1*Math.log(u)/lambda + t ;
}


var model = function() {
    var lambda = 1/4;
    var t = 1;
    var g2 = shifted_exponential_dist(lambda,t);    

    return {
        g2:g2,
    }
}


var d = Infer({method:"MCMC",kernel:"MH",samples:10000,lag:100,burn:1000},model);
// var d = Infer(model);
// display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

// exp_map(d,["g2"]);

var stat = function(v) {
    console.log("\nStat for v:",v);
    var m = marginalize(d, v);
    var s = m.supp;
    var mean = listMean(s);
    var stdev = listStdev(s,mean);
    console.log("\nmin:",_.min(s),"mean:",mean,"max:",_.max(s),"stdev:",stdev);
    
}

stat("g2");
