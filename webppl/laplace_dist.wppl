/*
   Generating Laplace or Double Exponential distribution

   From Handbook on probability distributions
   page 72ff

*/
// From Handbook on probability distributions
// page 73
// """
// Let U be a uniform variate. Then the algorithm is
// * V = U − 1/2
// * X = m + σsign(V ) log(1 − 2|V |)
// return X
// """
var laplace_dist = function(mu,sigma) {
    var u = uniform(0,1);
    var v = u-1/2;
    var x = mu + sigma*Math.sign(v)*Math.log(1-2*Math.abs(v));
    
    return x;
}

var model = function() {
    var mu = 0;
    var sigma = 1;
    var g = laplace_dist(mu,sigma);
    var g2 = laplace(mu,sigma); // built-in

    return {
        g:g,
        g2:g2,

    }
}


var d = Infer({method:"MCMC",kernel:"MH",samples:10000,lag:100,burn:1000},model);
// var d = Infer(model);
// display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

exp_map(d,["g","g2"]);

var stat = function(v) {
    console.log("\nv:",v);
    var m = marginalize(d, v);
    var s = m.supp;
    var mean = listMean(s);
    var stdev = listStdev(s,mean);
    console.log("\nmin:",_.min(s),"mean:",mean,"max:",_.max(s),"stdev:",stdev);
    
}

stat("g");
stat("g2");

