/*

  From
  https://mathematica.stackexchange.com/questions/128945/problems-encoding-a-bayesian-network-with-just-five-nodes-using-probabilitydistr

  Example is from "page 53 in Probabilistic Graphical Models (2009), by Daphne Koller and Neir Friedman:"

  """                                                                                                                                            
  The network has five nodes (random variables):
                                                                                                                                              
  Difficulty of a class taken by a student (0 = easy, 1 = hard)
  Intelligence of the student (0 = low, 1 = high)
  Grade achieved by the student (1 = A, 2 = B, 3 = C)
  SAT score of the student (0 = low, 1 = high)
  Letter of recommendation by the teacher (0 = False, 1 = True)
  We would like to use this network to do probabilistic inference (causal or evidential) like:                                                   
  "What is the probability of the student achieving an A, given that he is intelligent?"
  """

  Cf ~/blog/intelligence_test.blog

*/

var model = function() {

    var difficulty = categorical({ps:[0.6,0.4],vs:["difficulty_easy","difficulty_hard"]});
        
    var intelligence = categorical({ps:[0.7,0.3],vs:["intelligence_low", "intelligence_high"]});
    
        var grades = ["grade_a","grade_b","grade_c"];
    var grade =
        (intelligence == "intelligence_low" && difficulty=="difficulty_easy")  ? categorical({ps:[0.3 , 0.4 , 0.3 ],vs:grades}) : 
        (intelligence == "intelligence_low" && difficulty=="difficulty_hard")  ? categorical({ps:[0.05, 0.25, 0.7 ],vs:grades}) :
        (intelligence == "intelligence_high" && difficulty=="difficulty_easy") ? categorical({ps:[0.9 , 0.08, 0.02],vs:grades}):
        (intelligence == "intelligence_high" && difficulty=="difficulty_hard") ? categorical({ps:[0.5 , 0.3 , 0.2 ],vs:grades}) : "grade_xxx";
    
    
    var letter =
        (grade == "grade_a") ? flip(0.9) : 
        (grade == "grade_b") ? flip(0.6) :
        (grade == "grade_c") ? flip(0.01) : false;
    
    
    var sat =
        (intelligence == "intelligence_high") ? categorical({ps:[0.8,0.2],vs:["sat_high","sat_low"]}) :
        categorical({ps:[0.05,0.95],vs:["sat_high", "sat_low"]});
    
    
    // What is the probability of the student achieving an A, given that he is intelligent?
   
    // condition(sat == "sat_high");
    condition(letter == false);
    // condition(intelligence == "intelligence_high");

    return {
        grade:grade,
        intelligence:intelligence,
        difficulty:difficulty,
        sat:sat,
        letter:letter,
    }

}

var d = Infer(model);
// display(d);
    
var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

exp_map(d,["grade", "intelligence", "difficulty",
           "sat","letter"
          ]);

