/*
   Sequence waiting times between patterns.

   From 
   Gunnar Blom, Lars Holst, Dennis Sandell:
   "Problems and Snapshots from the World of Probability"
   Page 4ff, Problem 1.4 Patterns I, (Part Problem 2)

   Problem: Waiting time betweem patterns (coin flipping)
   
   What is the waiting time for the patterns [0,1] in a coin 
   flipping sequence given that we start the sequence with [0,1]
   ? 
   What is the waiting time for the pattern [1,1] if we start 
   with the pattern [1,1]?

   Cf sequence_waiting_times_1.wppl

   In this version we will start and end with the same pattern.

   Answer: The waiting times are the same as if we start
   with an empty sequence:
     * waiting time for [0,1] ... [0,1] = 4
     * waiting time for [1,1] ... [1,1] = 6

 
   This model verifies this result.   

*/

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    // display("MAP:");
    // display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

//
// Show the distribution and expected waiting time for
// finding the pattern <pattern> in a coin flip sequence.
//
var findPattern = function(pattern) {
    console.log("\n\nPattern: ", pattern);
    
    var model = function() {
        var patternLen = pattern.length;
        
        var flipSequence = function(a) {
            var len = a.length;
            if (len > patternLen && _.isEqual(a.slice(len-patternLen),pattern)) {
                return a;
            } else {
                return flipSequence(a.concat(flip() ? 1 : 0));
            }
        }
        
        var a = flipSequence(pattern);
        
        return {
            a:a,
            len:a.length,
        }

    }

    // var d = Infer(model);
    // var d = Infer({method:"enumerate"},model); // JavaScript heap out of memory
    // var d = Infer({method:"enumerate",maxExecutions:100000},model);
    var d = Infer({method:"rejection",samples:10000},model);
    // var d = Infer({method:"MCMC",samples:10000},model);
    // display(d);
    exp_map(d,["len"]);
        
}

findPattern([0,1]); // Waiting time: 4

findPattern([1,1]); // Longer waiting time: 6

// findPattern([1,1,1]);






