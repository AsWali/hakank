/*
   AR(1)

   Cf ~/stan/ar1.R and ~/stan/ar1.stan
  From Stan Users Guide, section 3.1 (page 51) "Autoregressive Models"

From the R model
"""
Result:
       mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff Rhat
alpha  0.73    0.00 0.10  0.54  0.67  0.73  0.80  0.92 14499    1
beta   0.16    0.00 0.10 -0.04  0.09  0.16  0.23  0.36 14601    1
sigma  0.35    0.00 0.03  0.31  0.34  0.35  0.37  0.41 19812    1
lp__  53.17    0.01 1.25 49.90 52.60 53.50 54.09 54.61 12256    1
"""

*/

var model = function() {

    var ys = [0.705429, 1.43062, 0.618161, 0.315107, 1.09993, 1.49022, 0.690016, 0.587519, 0.882984, 1.0278, 0.998615, 0.878366,
              1.17405,  0.532718, 0.486417, 1.13685, 1.32453, 1.3661, 0.914368, 1.07217, 1.1929, 0.418664, 0.889512, 1.47218,
              1.13471, 0.410168, 0.639765, 0.664874, 1.12101, 1.22703, -0.0931769, 0.4275, 0.901126, 1.01896, 1.27746, 1.17844,
              0.554775, 0.325423, 0.494777, 1.05813, 1.10177, 1.11225, 1.34575, 0.527594, 0.323462, 0.435063, 0.739342, 1.05661,
              1.42723, 0.810924, 0.0114801, 0.698537, 1.13063, 1.5286, 0.968813, 0.360574, 0.959312, 1.2296, 0.994434, 0.59919,
              0.565326, 0.855878, 0.892557, 0.831705, 1.31114, 1.26013, 0.448281, 0.807847, 0.746235, 1.19471, 1.23253, 0.724155,
              1.1464, 0.969122, 0.431289, 1.03716, 0.798294, 0.94466, 1.29938, 1.03269, 0.273438, 0.589431, 1.2741, 1.21863,
              0.845632, 0.880577, 1.26184, 0.57157, 0.684231, 0.854955, 0.664501, 0.968114, 0.472076, 0.532901, 1.4686, 1.0264,
              0.27994, 0.592303, 0.828514, 0.625841];

    var alpha = uniform(-2,2); // gaussian(2,2);
    var beta = uniform(-2,2); // gaussian(2,2);
    var sigma = uniform(0,2); // gamma(2,2); // > 0

    var y = function(i) {
        if (i == 0) {
            return Gaussian({mu:alpha + beta, sigma:sigma});            
        } else {
            // Note that we have to use sample for the recursion!
            // Otherwise this error is thrown:
            //    Error: Parameter "mu" should be of type "real"
            return Gaussian({mu:alpha + beta * sample(y(i-1)), sigma:sigma});
        }
    }

    mapIndexed(function(i,val) {
        observe(y(i),val)
    },ys);

    return {
        alpha:alpha,
        beta:beta,
        sigma:sigma
    }

}

// var d = Infer(model);
var d = Infer({method:"SMC",particles:400},model);
// var d = Infer({method:"MCMC",kernel:"MH",samples:1000,verbose:true},model);
display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

exp_map(d,["alpha","beta","sigma"]);
