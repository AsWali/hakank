/*

  From cplint: http://cplint.eu/example/inference/coin.pl
  """
  Throwing a coin with uncertainty on its fairness, from
  J. Vennekens, S. Verbaeten, and M. Bruynooghe. Logic programs with annotated
  disjunctions. In International Conference on Logic Programming,
  volume 3131 of LNCS, pages 195-209. Springer, 2004.
  """

  Cf ~/cplint/coin.pl
     ~/blog/biased_coin.blog

*/

/*
  From the cplint model:

  heads(Coin): 1/2; tails(Coin) : 1/2:-toss(Coin),\+biased(Coin).
  % if we toss a Coin that is not biased then it lands heads with probability 1/2
  % and tails with probability 1/2

  heads(Coin): 0.6 ; tails(Coin) : 0.4:-toss(Coin),biased(Coin).
  % if we toss a Coin that is biased then it lands heads with probability 0.6
  % % and tails with probability 0.4
  
  fair(Coin):0.9 ; biased(Coin):0.1.
  % a Coin is fair with probability 0.9 and biased with probability 0.1
  
  toss(coin).
  % coin is certainly tossed
  

  ?- prob(heads(coin),Prob).  % what is the probability that coin lands heads?
  % expected result 0.51
  
  ?- prob(tails(coin),Prob).  % what is the probability that coin lands tails?
  % expected result 0.49
  
  calculation: is fair and tail 0.9*0.5 + biased and tail 0.1*0.4 = 0.9*0.5 +  0.1*0.4 = 0.49
  
  ?- prob(heads(coin),biased(coin),Prob).
  % what is the probability that coin lands heads given the coin is biased?
  % expected result 0.6
    
*/

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    // display("MAP:");
    // display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

var model = function(experiment) {
   
    return function() {        
        var coinType = categorical({ps:[0.9,0.1],vs:["fair","biased"]});
        var coinResult = coinType == "fair" ? categorical({ps:[0.5,0.5],vs:["head","tail"]}) :
            categorical({ps:[0.6,0.4],vs:["head","tail"]});

        if (experiment == "observe biased") {
            condition(coinType == "biased");
        }
        
        return {
            coinResult:coinResult,
            coinType:coinType,
            coinHead:coinResult=="head",
            coinTail:coinResult=="tail",            
        }
    }

}

console.log("Model 1: Probability of tossing a head (no observation)");
var d1 = Infer(model("not observed"));
display(d1);

exp_map(d1,["coinResult","coinType","coinHead","coinTail"]);

console.log("\n\nModel 2: Probability of tossing a head given that we know it's biased");
var d2 = Infer(model("observe biased"));
display(d2);

exp_map(d2,["coinResult","coinType","coinHead","coinTail"]);
