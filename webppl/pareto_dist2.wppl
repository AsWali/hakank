/*
   Generating Pareto distribution

   From Handbook on probability distributions
   page 88ff.

*/
// From Handbook on probability distributions
// page 95
// """
// ... Therefore algorithms for random generation are simply
// * for P_I(sigma, alpha) distribution, F^−1(u)= sigma*U^(-1/alpha)
// * for P_II(mu, sigma, alpha) distribution, F^−1(u) = sigma*(U^(-1/alpha − 1) + mu,
// * for P_III(mu, sigma, gamma) distribution, F^−1(u) = sigma*(U^(−1)−1)^gamma + mu,
// * for P_IV(mu, sigma, alpha[, gamma]) distribution, F^−1(u) = sigma*(U^(-1/alpha)− 1)^gamma + mu,
// where U is an uniform random variate.
// """
// Note: P_IV is missing the fourth parameter gamma in the text.
var pareto_i = function(sigma,alpha) {
    var u = uniform(0,1); 
    return sigma*Math.pow(u,(-1/alpha));
}

var pareto_ii = function(mu,sigma,alpha) {
    var u = uniform(0,1);
    return sigma*(Math.pow(u,-1/alpha)-1) + mu;
}
    

var pareto_iii = function(mu,sigma,gamma) {
    var u = uniform(0,1); 
    return sigma*Math.pow(Math.pow(u,-1)-1,gamma) + mu;
}

var pareto_iv = function(mu,sigma,alpha,gamma) {
    var u = uniform(0,1); 
    return sigma*Math.pow(Math.pow(u,-1/alpha)-1,gamma) + mu;
}



var model = function() {
    var g1 = pareto_i(2,3);
    var g2 = pareto_ii(2,3,1);
    var g3 = pareto_iii(1,1,1);
    var g4 = pareto_iv(0,1,1,2);
    
   

    return {
        g1:g1,
        g2:g2,
        g3:g3,
        g4:g4,
    }
}


// var d = Infer({method:"MCMC",kernel:"MH",samples:10000},model);
var d = Infer({method:"SMC",particles:10000},model);
// var d = Infer(model);
// display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

// exp_map(d,["g1","g2","g3","g4"]);

var stat = function(v) {
    console.log("\nv:",v);
    var m = marginalize(d, v);
    var s = m.supp;
    var mean = listMean(s);
    var stdev = listStdev(s,mean);
    console.log("\nmin:",_.min(s),"mean:",mean,"max:",_.max(s),"stdev:",stdev);
    
}

stat("g1");
stat("g2");
stat("g3");
stat("g4");


