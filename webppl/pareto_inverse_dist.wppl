/*
   Generating Inverse Pareto distribution

   From Handbook on probability distributions
   page 98.

*/

// See pareto_dist2.wppl
var pareto_ii = function(mu,sigma,alpha) {
    var u = uniform(0,1);
    return sigma*(Math.pow(u,-1/alpha)-1) + mu;
}


// From Handbook on probability distributions
// page 98
// """
// Simply inverse a Pareto II variable.
// """
var inverse_pareto = function(mu,sigma,alpha) {
    return 1/pareto_ii(mu,sigma,alpha);
}

    
var model = function() {

    var g = inverse_pareto(2,1,1);  

    return {
        g:g,
    }
}


// var d = Infer({method:"MCMC",kernel:"MH",samples:10000},model);
var d = Infer({method:"SMC",particles:10000},model);
// var d = Infer(model);
// display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) { [a,expectation(marginalize(d, a))] }, arr));
    display("MAP:");
    display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

// exp_map(d,["g"]);

var stat = function(v) {
    console.log("\nv:",v);
    var m = marginalize(d, v);
    var s = m.supp;
    var mean = listMean(s);
    var stdev = listStdev(s,mean);
    console.log("\nmin:",_.min(s),"mean:",mean,"max:",_.max(s),"stdev:",stdev);
    
}

stat("g");

