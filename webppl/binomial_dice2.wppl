/*
   https://reference.wolfram.com/language/ref/BinomialDistribution.html
   """
   Two players roll dice. If the total of both numbers is less than 10, the second player 
   is paid 4 cents; otherwise the first player is paid 9 cents. Is the game fair?:
   """

   From the site: 
   The game is not fair: mean scores are 1.5 and 3.33333.


   For what L would be fair game?
   Comment 
      condition(L == 10) 
   and uncomment
      condition(prob1Times9 == prob2Times4);
   // Answer L: 9

*/

var model = function() {

    var N = 36;
    
    var player1 = function(i) {
        return 1+randomInteger(6);
    }
    
    var player2 = function(i) {
        return 1+randomInteger(6);
    }
    
    // Find the optimal limit
    var L = 2+randomInteger(11);
    
    // Outcome (seen as player1)
    var outcome = function(i) {
        if (player1(i) + player2(i) < L) {
            return -4;
        } else {
            return 9;
        }
    }
    
    var prob1B = player1(1) + player2(1) >= L;
    var prob2B = player1(1) + player2(1) < L;
    
    var prob1 = sum(mapN(function(i) { return player1(i) + player2(i) >= L },N)) / N;
    var prob2 = sum(mapN(function(i) { return player1(i) + player2(i)  < L },N)) / N;                    
    
    var total = sum(mapN(function(i) { return outcome(i) },L))
    
    var prob1Times9 = prob1*9;
    var prob2Times4 = prob2*4;

    condition(L == 10);
    
    // What L would be fair game?
    // L: 9
    // condition(prob1Times9 == prob2Times4);

    return {
        total:total,
        
        prob1B:prob1B,
        prob2B:prob2B,
        
        prob1:prob1,
        prob2:prob2,
        
        prob1Times9:prob1Times9,
        prob2Times4:prob2Times4,
        
        L:L,
    }

}

// var d = Infer({method:"enumerate"},model);
// var d = Infer({method:"MCMC",kernel:"MH",samples:10000},model);
var d = Infer({method:"SMC",particles:10000},model);
// display(d);

var exp_map = function(d,arr) {
    display("Marginals:");
    map(function(a) {display(a);display(marginalize(d, a)) }, arr);
    display("expectation:");
    display(map(function(a) {[a,expectation(marginalize(d, a))]}, arr));
    // display("MAP:");
    // display(map(function(a) { [a,MAP(marginalize(d, a))] }, arr));
}

exp_map(d,["total","prob1B","prob2B","prob1","prob2","prob1Times9","prob2Times4","L"]);

