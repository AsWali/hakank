/* 

  GCD and LCM in Picat.

  Not very effective for larger values...
 
  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import cp.


main => go.

go ?=>
  N = 100,

  A :: 1..N,
  B :: 1..N,
  GCD :: 1..N,
  LCM :: 1..N*N,

  % GCD #= 1,
  LCM #= 60,

  gcd(A,B,GCD),
  lcm(A,B,LCM),  

  A #< B,

  Vars = [A,B,GCD,LCM],
  % solve($[ff,split,max(LCM)],Vars), % quite slow
  % solve($[ff,split,max(GCD)],Vars), % quite slow
  solve($[ff,split],Vars),  
  
  println([A,B,gcd=GCD,lcm=LCM]),
  fail,
   
  nl.

go => true.


%
% gcd(X,Y,G)
% G is the gcd of X and Y
%
gcd(X, Y, GCD) =>
  fd_min_max(X,_MinX,MaxX),
  fd_min_max(Y,_MinY,MaxY),
  PMax = min(MaxX,MaxY),
  % PMin = max(MinX,MinY),
  P :: 1..PMax,

  foreach (I in 1..PMax)
    I #= P #=> (X mod I #= 0 #/\ Y mod I #= 0 #/\ GCD #= I),
    foreach(J in I+1..PMax) 
      I#>= P #=> (X mod J #!= 0 #\/ Y mod J #!= 0)
    end
  end.


%
% lcm(X,Y,LCM)
% cm is the lcm of x and y
%
% Not very efficient.
%
lcm(X, Y, LCM) =>
  fd_min_max(X,_MinX,MaxX),
  fd_min_max(Y,_MinY,MaxY),
  PMax = min(MaxX,MaxY),
  GCD :: 1..PMax,
  gcd(X,Y,GCD),
  LCM #= X*Y div GCD.
