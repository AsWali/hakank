/* 

  Using asserts (in bp context) in Picat v3.

  Also see http://hakank.org/picat/bp_test_v3.pi

  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

main => go.


go ?=>
  bp.assert($rich(mary)),
  bp.assert($(happy(X) :- rich(X), healthy(X))),
  bp.assert($healthy(mary)),
  bp.assert($healthy(hakank)),
  bp.assert($rich(hakank)),    

  % Note: Since happy is defined in bp context one
  % must use bp.happy
  bp.happy(X),
  println(X),
  
  bp.find_all(X2,$happy(X2),All2),
  println(all2=All2),
  bp.retract($rich(mary)),

  bp.find_all(X3,$happy(X3),All3),
  println(all3=All3),

  % One must put a parenthesis around bp.happy/1
  All4 = find_all(X4,(bp.happy(X4))),
  println(all4=All4),

  % Note: bp.happy should NOT be $ escaped here
  All5 = find_all(X5,bp.happy(X5)),
  println(all5=All5),
 
  nl.

go => true.

go2 ?=>
  bp.assert($rich(mary)),
  bp.assert($(happy(X) :- rich(X), healthy(X))),
  bp.assert($healthy(mary)),
  bp.assert($healthy(hakank)),
  bp.assert($rich(hakank)),    

  bp.clause($happy(X),Body),
  println(body=Body),

  nl.

go2 => true.

